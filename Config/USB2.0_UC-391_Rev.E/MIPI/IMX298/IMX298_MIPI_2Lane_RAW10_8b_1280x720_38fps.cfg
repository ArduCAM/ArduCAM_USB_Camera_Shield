;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX298
SIZE      = 1280, 720 
BIT_WIDTH = 8 
FORMAT    = 0, 3
I2C_MODE  = 2					
I2C_ADDR  = 0x34
;TRANS_LVL = 128


[control parameter]
MIN_VALUE   = 0
MAX_VALUE   = 1023
STEP        = 1
DEF 		= 210
CTRL_NAME	= Focus
FUNC_NAME	= setFocus
======CODE_BLOCK_START======
function setFocus(val)
    data = {0}
	val = math.floor(val)
	high = (val & 0x03FC) >> 2
	low = (val & 0x0003) << 6
	data[1] = high
	ret = SendVR(0xD7, 0x1800, 0x0000, 1, data)
	data[1] = low
	ret = SendVR(0xD7, 0x1800, 0x0100, 1, data)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 2
MAX_VALUE   = 40
STEP        = 1
DEF 		= 38
CTRL_NAME	= Framerate
FUNC_NAME	= setFramerate
======CODE_BLOCK_START======
function setFramerate(val)
    local pix_clk_hz = 340000000
    -- line_length 0x0342 0x0343
    local hts = 5536
    local vts =  math.floor(pix_clk_hz/(hts*val))
    -- vts 0x0340 0x0341
	writeReg(0x0340, (vts & 0xFF00) >> 8)
    writeReg(0x0341, (vts & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 4
MAX_VALUE   = 65535
STEP        = 1
DEF 		= 1600
CTRL_NAME	= Exposure
FUNC_NAME	= setExposure
======CODE_BLOCK_START======
function setExposure(val)
    -- vts 0x0202 0x0203
	writeReg(0x0202, (val & 0xFF00) >> 8)
    writeReg(0x0203, (val & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 1
MAX_VALUE   = 33000
STEP        = 1
DEF 		= 33000
CTRL_NAME	= Exp(us)
FUNC_NAME	= setExposureTime
======CODE_BLOCK_START======
function setExposureTime(val)
    local hts = 5536
    local pix_clk_hz = 340000000
    local exp = math.floor(val*1000/(hts/pix_clk_hz*1e9))

	writeReg(0x0202, (exp & 0xFF00) >> 8)
    writeReg(0x0203, (exp & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 0
MAX_VALUE   = 448
STEP        = 1
DEF 		= 0
CTRL_NAME	= Gain
FUNC_NAME	= setGain
======CODE_BLOCK_START======
function setGain(val)
	writeReg(0x0204, (val & 0xFF00) >> 8)
    writeReg(0x0205, (val & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 100
MAX_VALUE   = 800
STEP        = 1
DEF 		= 100
CTRL_NAME	= Gain(0.001x)
FUNC_NAME	= setAnalogueGain
======CODE_BLOCK_START======
function setAnalogueGain(val)
    local gain = math.floor(512 - 512  / (val / 100))
	writeReg(0x0204, (gain & 0xFF00) >> 8)
    writeReg(0x0205, (gain & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x02
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xD0
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C
// Focus adjust
DELAY = 1
VRCMD = 0xD7, 0x1800, 0x0200, 1, 0x00
DELAY = 1
VRCMD = 0xD7, 0x1800, 0x0000, 1, 0x34
VRCMD = 0xD7, 0x1800, 0x0100, 1, 0x00


[board parameter][dev2]


[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x12
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0103 , 0x01
DELAY = 100
REG = 0x0100, 0x00
    //************mode setting******/
REG = 0x0114, 0x01
REG = 0x0220, 0x00
REG = 0x0221, 0x11
REG = 0x0222, 0x10
REG = 0x0340, 0x06
REG = 0x0341, 0x50
REG = 0x0342, 0x15
REG = 0x0343, 0xA0
REG = 0x0344, 0x00
REG = 0x0345, 0x00
REG = 0x0346, 0x02
REG = 0x0347, 0x88
REG = 0x0348, 0x12
REG = 0x0349, 0x2F
REG = 0x034A, 0x0B
REG = 0x034B, 0x1F
REG = 0x0381, 0x01
REG = 0x0383, 0x01
REG = 0x0385, 0x03
REG = 0x0387, 0x03
REG = 0x0900, 0x01
REG = 0x0901, 0x22
REG = 0x0902, 0x00
REG = 0x3010, 0x65
REG = 0x3011, 0x01
REG = 0x30C0, 0x11
REG = 0x300D, 0x01
REG = 0x30FD, 0x00
REG = 0x8493, 0x00
REG = 0x8863, 0x00
REG = 0x90D7, 0x19
    //***********output size setting***********/
REG = 0x0112, 0x0A
REG = 0x0113, 0x0A
REG = 0x034C, 0x05
REG = 0x034D, 0x00
REG = 0x034E, 0x02
REG = 0x034F, 0xD0
REG = 0x0401, 0x01
REG = 0x0404, 0x00
REG = 0x0405, 0x18
REG = 0x0408, 0x00
REG = 0x0409, 0xCA
REG = 0x040A, 0x00
REG = 0x040B, 0x04
REG = 0x040C, 0x07
REG = 0x040D, 0x82
REG = 0x040E, 0x02
REG = 0x040F, 0xD2
    //**********clock setting**************/
REG = 0x0301, 0x05
REG = 0x0303, 0x02
REG = 0x0305, 0x04
REG = 0x0306, 0x00
REG = 0x0307, 0x8D  //DD
REG = 0x0309, 0x0A
REG = 0x030B, 0x01
REG = 0x030D, 0x0F
REG = 0x030E, 0x03
REG = 0x030F, 0x41
REG = 0x0310, 0x00
REG = 0x0350, 0x00  //Frame Length Control 0:Manual, 1: auto tracking COARSE_INTEG_TIME 
    //************data rateing setting**********/
REG = 0x0820, 0x14
REG = 0x0821, 0xB8
REG = 0x0822, 0x00
REG = 0x0823, 0x00
    //************integration time **/
REG = 0x0202, 0x03
REG = 0x0203, 0x14
REG = 0x0224, 0x01
REG = 0x0225, 0xF4
    //***********gain setting******* **/
REG = 0x0204, 0x01
REG = 0x0205, 0x00
REG = 0x0216, 0x00
REG = 0x0217, 0x00
REG = 0x020E, 0x01
REG = 0x020F, 0x00
REG = 0x0210, 0x01
REG = 0x0211, 0x00
REG = 0x0212, 0x01
REG = 0x0213, 0x00
REG = 0x0214, 0x01
REG = 0x0215, 0x00
    //******NR Setting****************/
REG = 0x3058, 0x00
    //**********PD setting**/
REG = 0x3103, 0x01
REG = 0x0100, 0x01

REG = 0x0210, 0x02 //Red
REG = 0x0212, 0x02 //Blue
REG = 0x0205, 0x50

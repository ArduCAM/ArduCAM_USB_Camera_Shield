;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = OV5648-5MP-RAW10							
SIZE      = 10368, 1944
BIT_WIDTH = 8 
FORMAT    = 0, 1
I2C_MODE  = 2					
I2C_ADDR  = 0x6C		

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x23
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x28
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x80
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x98
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01

VRCMD = 0xD7, 0x4800, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4800, 0x0C00, 1, 0x81
VRCMD = 0xD7, 0x4800, 0x0D00, 1, 0x06
VRCMD = 0xD7, 0x4800, 0x0E00, 1, 0x40
VRCMD = 0xD7, 0x4800, 0x0F00, 1, 0x02
VRCMD = 0xD7, 0x4800, 0x1000, 1, 0xD0
VRCMD = 0xD7, 0x4800, 0x1100, 1, 0x05
VRCMD = 0xD7, 0x4800, 0x2300, 1, 0x01
VRCMD = 0xD7, 0x4800, 0x2400, 1, 0x00
VRCMD = 0xD7, 0x4800, 0x2500, 1, 0x00

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x23
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;[register parameter]					Register parameter set for USB2.0 & USB3.0 mode	
;[register parameter][dev2]				Register parameter set for USB2.0 mode
;[register parameter][dev3][inf2]		Register parameter set for USB3.0 mode and USB2.0 interface
;[register parameter][dev3][inf3]		Register parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0100, 0x00  // Software Standy
REG = 0x0103, 0x01  // Software Reset
REG =              
DELAY = 0x05  //must delay
REG = 0x3001, 0x00  // D[7:0] set to input
REG = 0x3002, 0x00  // D[11:8] set to input
REG = 0x3011, 0x02  // Drive strength 2x
REG = 0x3018, 0x4c  // MIPI 2 lane
REG = 0x3022, 0x00 
REG = 0x3034, 0x1a  // 10-bit mode
REG = 0x3035, 0x21  // PLL
REG = 0x3036, 0x69  // PLL
REG = 0x3037, 0x03  // PLL
REG = 0x3038, 0x00  // PLL
REG = 0x3039, 0x00  // PLL
REG = 0x303a, 0x00  // PLLS
REG = 0x303b, 0x19  // PLLS
REG = 0x303c, 0x11  // PLLS
REG = 0x303d, 0x30  // PLLS
REG = 0x3105, 0x11 
REG = 0x3106, 0x05  // PLL
REG = 0x3304, 0x28 
REG = 0x3305, 0x41 
REG = 0x3306, 0x30 
REG = 0x3308, 0x00 
REG = 0x3309, 0xc8 
REG = 0x330a, 0x01 
REG = 0x330b, 0x90 
REG = 0x330c, 0x02 
REG = 0x330d, 0x58 
REG = 0x330e, 0x03 
REG = 0x330f, 0x20 
REG = 0x3300, 0x00 
REG = 0x3500, 0x00  // exposure [19:16]
REG = 0x3501, 0x3d  // exposure [15:8]
REG = 0x3502, 0x00  // exposure [7:0], exposure = 0x3d0 = 976
REG = 0x3503, 0x07  // gain has no delay, manual agc/aec
REG = 0x350a, 0x00  // gain[9:8]
REG = 0x350b, 0x40  // gain[7:0], gain = 4x
REG = 0x3601, 0x33  // analog control
REG = 0x3602, 0x00  // analog control
REG = 0x3611, 0x0e  // analog control
REG = 0x3612, 0x2b  // analog control
REG = 0x3614, 0x50  // analog control
REG = 0x3620, 0x33  // analog control
REG = 0x3622, 0x00  // analog control
REG = 0x3630, 0xad  // analog control
REG = 0x3631, 0x00  // analog control
REG = 0x3632, 0x94  // analog control
REG = 0x3633, 0x17  // analog control
REG = 0x3634, 0x14  // analog control
REG = 0x3704, 0xc0  // analog control
REG = 0x3705, 0x2a  // analog control
REG = 0x3708, 0x66  // analog control
REG = 0x3709, 0x52  // analog control
REG = 0x370b, 0x23  // analog control
REG = 0x370c, 0xc3  // analog control
REG = 0x370d, 0x00  // analog control
REG = 0x370e, 0x00  // analog control
REG = 0x371c, 0x07  // analog control
REG = 0x3739, 0xd2  // analog control
REG = 0x373c, 0x00 
REG = 0x3800, 0x00  // xstart = 0
REG = 0x3801, 0x00  // xstart
REG = 0x3802, 0x00  // ystart = 0
REG = 0x3803, 0x00  // ystart
REG = 0x3804, 0x0a  // xend = 2623
REG = 0x3805, 0x3f  // yend
REG = 0x3806, 0x07  // yend = 1955
REG = 0x3807, 0xa3  // yend
REG = 0x3808, 0x05  // x output size = 1296
REG = 0x3809, 0x10  // x output size
REG = 0x380a, 0x03  // y output size = 972
REG = 0x380b, 0xcc  // y output size
REG = 0x380c, 0x0b  // hts = 2816
REG = 0x380d, 0x00  // hts
REG = 0x380e, 0x03  // vts = 992
REG = 0x380f, 0xe0  // vts
REG = 0x3810, 0x00  // isp x win = 8
REG = 0x3811, 0x08  // isp x win
REG = 0x3812, 0x00  // isp y win = 4
REG = 0x3813, 0x04  // isp y win
REG = 0x3814, 0x31  // x inc
REG = 0x3815, 0x31  // y inc
REG = 0x3817, 0x00  // hsync start
REG = 0x3820, 0x08  // flip off, v bin off
REG = 0x3821, 0x07  // mirror on, h bin on
REG = 0x3826, 0x03 
REG = 0x3829, 0x00 
REG = 0x382b, 0x0b 
REG = 0x3830, 0x00 
REG = 0x3836, 0x00 
REG = 0x3837, 0x00 
REG = 0x3838, 0x00 
REG = 0x3839, 0x04 
REG = 0x383a, 0x00 
REG = 0x383b, 0x01 
REG = 0x3b00, 0x00  // strobe off
REG = 0x3b02, 0x08  // shutter delay
REG = 0x3b03, 0x00  // shutter delay
REG = 0x3b04, 0x04  // frex_exp
REG = 0x3b05, 0x00  // frex_exp
REG = 0x3b06, 0x04 
REG = 0x3b07, 0x08  // frex inv
REG = 0x3b08, 0x00  // frex exp req
REG = 0x3b09, 0x02  // frex end option
REG = 0x3b0a, 0x04  // frex rst length
REG = 0x3b0b, 0x00  // frex strobe width
REG = 0x3b0c, 0x3d  // frex strobe width
REG = 0x3f01, 0x0d 
REG = 0x3f0f, 0xf5 
REG = 0x4000, 0x89  // blc enable
REG = 0x4001, 0x02  // blc start line
REG = 0x4002, 0x45  // blc auto, reset frame number = 5
REG = 0x4004, 0x02  // black line number
REG = 0x4005, 0x18  // blc normal freeze
REG = 0x4006, 0x08 
REG = 0x4007, 0x10 
REG = 0x4008, 0x00 
REG = 0x4300, 0xf8 
REG = 0x4303, 0xff 
REG = 0x4304, 0x00 
REG = 0x4307, 0xff 
REG = 0x4520, 0x00 
REG = 0x4521, 0x00 
REG = 0x4511, 0x22 
REG = 0x4800, 0x14  // MIPI line sync enable
REG = 0x481f, 0x3c  // MIPI clk prepare min
REG = 0x4826, 0x00  // MIPI hs prepare min
REG = 0x4837, 0x18  // MIPI global timing
REG = 0x4b00, 0x06 
REG = 0x4b01, 0x0a 
REG = 0x5000, 0xff  // bpc on, wpc on
REG = 0x5001, 0x00  // awb disable
REG = 0x5002, 0x41  // win enable, awb gain enable
REG = 0x5003, 0x0a  // buf en, bin auto en
REG = 0x5004, 0x00  // size man off
REG = 0x5043, 0x00 
REG = 0x5013, 0x00 
REG = 0x501f, 0x03  // ISP output data
REG = 0x503d, 0x00  // test pattern off
REG = 0x5180, 0x08  // manual wb gain on
REG = 0x5a00, 0x08 
REG = 0x5b00, 0x01 
REG = 0x5b01, 0x40 
REG = 0x5b02, 0x00 
REG = 0x5b03, 0xf0 
REG = 0x301a, 0xf0 
REG = 0x0100, 0x01  // wake up from software sleep
REG = 0x4837, 0x17  // MIPI global timing
 

// 2592x1944 15fps 2 lane MIPI 420Mbps/lane
REG = 0x0100, 0x00  
REG = 0x3501, 0x7b  // exposure
REG = 0x2502, 0x00  // exposure
REG = 0x3708, 0x63  
REG = 0x3709, 0x12  
REG = 0x370c, 0xc0  
REG = 0x3800, 0x00  // xstart = 0
REG = 0x3801, 0x00  // xstart
REG = 0x3802, 0x00  // ystart = 0
REG = 0x3803, 0x00  // ystart
REG = 0x3804, 0x0a  // xend = 2623
REG = 0x3805, 0x3f  // xend
REG = 0x3806, 0x07  // yend = 1955
REG = 0x3807, 0xa3  // yend
REG = 0x3808, 0x0a  // x output size = 2592
REG = 0x3809, 0x20  // x output size
REG = 0x380a, 0x07  // y output size = 1944
REG = 0x380b, 0x98  // y output size
REG = 0x380c, 0x0b  // hts = 2816
REG = 0x380d, 0x00  // hts
REG = 0x380e, 0x07  // vts = 1984
REG = 0x380f, 0xc0  // vts
REG = 0x3810, 0x00  // isp x win = 16
REG = 0x3811, 0x10  // isp x win
REG = 0x3812, 0x00  // isp y win = 6
REG = 0x3813, 0x06  // isp y win
REG = 0x3814, 0x11  // x inc
REG = 0x3815, 0x11  // y inc
REG = 0x3817, 0x00  // hsync start
REG = 0x3820, 0x40  // flip off, v bin off
REG = 0x3821, 0x05  // mirror on, v bin off
REG = 0x4004, 0x04  // black line number
REG = 0x4005, 0x1a  // blc always update
REG = 0x350b, 0x40  // gain = 4x
REG = 0x4837, 0x17  // MIPI global timing
REG = 0x3037, 0x04 
REG = 0x0100, 0x00  
DELAY = 100
REG = 0x0100, 0x01  

REG = 0X3503, 0X00
REG = 0X5001, 0X01
REG = 0X5002, 0X41

[register parameter][dev3][inf2]


[register parameter][dev3][inf3]
REG = 0x380c, 0x16  // hts[15:8]



;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX219-8MP
SIZE      = 3280, 2462
BIT_WIDTH = 8 
FORMAT    = 0, 2
I2C_MODE  = 2					
I2C_ADDR  = 0x20
;TRANS_LVL = 128

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x25
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x0C
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0xD0
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x09
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x9E
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x25
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0


;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0103, 0x01
REG = 0x0100, 0x00
REG = 0x6620, 0x01
REG = 0x6621, 0x01
REG = 0x6622, 0x01
REG = 0x6623, 0x01
REG = 0x30EB, 0x0C
REG = 0x30EB, 0x05
REG = 0x300A, 0xFF
REG = 0x300B, 0xFF
REG = 0x30EB, 0x05
REG = 0x30EB, 0x09 
REG = 0x0114, 0x01
REG = 0x0128, 0x00
REG = 0x012A, 0x18
REG = 0x012B, 0x00
REG = 0x0157, 0x00
REG = 0x015A, 0x09
REG = 0x015B, 0xBD
REG = 0x0164, 0x00
REG = 0x0165, 0x00
REG = 0x0166, 0x0C
REG = 0x0167, 0xCF
REG = 0x0168, 0x00
REG = 0x0169, 0x00
REG = 0x016A, 0x09
REG = 0x016B, 0x9F
REG = 0x018C, 0x0A
REG = 0x018D, 0x0A
REG = 0x0301, 0x05
REG = 0x0303, 0x01
REG = 0x0304, 0x03
REG = 0x0305, 0x03
REG = 0x0306, 0x00 
REG = 0x0307, 0x24	//0x24 
REG = 0x0309, 0x0A
REG = 0x030B, 0x01
REG = 0x030C, 0x00  
REG = 0x030D, 0x48	//0x48	
REG = 0x455E, 0x00
REG = 0x471E, 0x4B
REG = 0x4767, 0x0F
REG = 0x4750, 0x14
REG = 0x4540, 0x00
REG = 0x47B4, 0x14
REG = 0x4713, 0x30
REG = 0x478B, 0x10
REG = 0x478F, 0x10
REG = 0x4793, 0x10
REG = 0x4797, 0x0E
REG = 0x479B, 0x0E
REG = 0x0100, 0x01
REG = 0x015A, 0x04
REG = 0x015B, 0x22
REG = 0x0157, 0x00
REG = 0x015A, 0x0D
REG = 0x015B, 0x05
REG = 0x0157, 0xE0

REG = 0x016C, 0x0C
REG = 0x016D, 0xD0
REG = 0x016E, 0x09
REG = 0x016F, 0x9E

REG = 0x0160, 0x0A
REG = 0x0161, 0xA8
REG = 0x0162, 0x0D
REG = 0x0163, 0x78
REG = 0x0170, 0x01
REG = 0x0171, 0x01
REG = 0x015a, 0x00
REG = 0x015b, 0x80
REG = 0x0172, 0x01
REG = 0x0100, 0x01

DELAY  =  0x064 
REG = 0x015b , 0x80
REG = 0x015a , 0x03     //coarse integration
REG = 0x0157 , 0xd0

REG = 0x0172 , 0x1

[register parameter][dev3][inf2]


[register parameter][dev3][inf3]


[board parameter]
;;REM	*********************************************		
;;REM	Start up sequence		
;;REM	*********************************************		
;REM	**************************************************		
;REM	TC358746XBG Software Reset		
;REM	**************************************************		
//REG = 0x0002, 0x0001	//SYSctl, S/W Reset
VRCMD = 0xE1, 0x1C00, 0x0002, 2, 0x00, 0x01
DELAY = 	10		
//REG = 0x0002, 0x0000	//SYSctl, S/W Reset release
VRCMD = 0xE1, 0x1C00, 0x0002, 2, 0x00, 0x00
			
;REM	**************************************************		
;REM	TC358746XBG PLL,Clock Setting		
;REM	**************************************************		
//REG = 0x0016, 0x3077	//PLL Control Register 0 (PLL_PRD,PLL_FBD)
VRCMD = 0xE1, 0x1C00, 0x0016, 2, 0x10, 0x4F
//REG = 0x0018, 0x0403	//PLL_FRS,PLL_LBWS, PLL oscillation enable
VRCMD = 0xE1, 0x1C00, 0x0018, 2, 0x00, 0x03
DELAY = 100		
//REG = 0x0018, 0x0413	//PLL_FRS,PLL_LBWS, PLL clock out enable
VRCMD = 0xE1, 0x1C00, 0x0018, 2, 0x00, 0x13
//REG = 0x0020, 0x0011	//CLK control register: Clock divider setting
VRCMD = 0xE1, 0x1C00, 0x0020, 2, 0x00, 0x00
			
;REM	**************************************************		
;REM	TC358746XBG MCLK Output		
;REM	**************************************************		
//REG = 0x000C, 0x0101	//MCLK duty setting
VRCMD = 0xE1, 0x1C00, 0x000C, 2, 0x01, 0x01
			
;REM	**************************************************		
;REM	TC358746XBG GPIO2,1 Control (Example)		
;REM	**************************************************		
;REM	0010	FFF9	GPIO Direction, GPIO2,1 output
;REM	0014	0000	GPIO output data. GPIO2="L", GPIO1="L"
;REM	000E	0006	GPIO enable. GPIO2,1 enable
;REM	0014	0006	GPIO output data. GPIO2="H", GPIO1="H"
			
;REM	**************************************************		
;REM	TC358746XBG Format configuration, timing Setting		
;REM	**************************************************		
//REG = 0x0060, 0x800A	//PHY timing DELAY =  setting
VRCMD = 0xE1, 0x1C00, 0x0060, 2, 0x80, 0x0F
//REG = 0x0006, 0x0032	//FIFO control
VRCMD = 0xE1, 0x1C00, 0x0006, 2, 0x00, 0x32
//REG = 0x0008, 0x0011	//Data format control
VRCMD = 0xE1, 0x1C00, 0x0008, 2, 0x00, 0x11
//REG = 0x0004, 0x8145	//Configuration control
VRCMD = 0xE1, 0x1C00, 0x0004, 2, 0x81, 0x45


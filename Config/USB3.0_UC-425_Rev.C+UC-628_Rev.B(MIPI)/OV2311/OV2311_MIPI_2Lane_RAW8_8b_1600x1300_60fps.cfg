;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = OV2311-2MP-2L
SIZE      = 1600, 1300
BIT_WIDTH = 8 
FORMAT    = 0, 0
I2C_MODE  = 2					
I2C_ADDR  = 0xC0
;TRANS_LVL = 128

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x13
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x81
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x06
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x14
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x13
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0001, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0001, 0x0000, 0


;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

REG = 0x0103, 0x01
REG = 0x0100, 0x00
REG = 0x0300, 0x01
REG = 0x0302, 0x32
REG = 0x0303, 0x00
REG = 0x0304, 0x03
REG = 0x0305, 0x02
REG = 0x0306, 0x01
REG = 0x030d, 0x5a
REG = 0x030e, 0x04
REG = 0x3001, 0x02
REG = 0x3004, 0x00
REG = 0x3005, 0x00
REG = 0x3006, 0x00
REG = 0x3011, 0x0d
REG = 0x3014, 0x04
REG = 0x301c, 0xf0
REG = 0x3020, 0x00
REG = 0x302c, 0x00
REG = 0x302d, 0x12
REG = 0x302e, 0x4c
REG = 0x302f, 0x8c
REG = 0x3030, 0x10
REG = 0x303f, 0x03
REG = 0x3103, 0x00
REG = 0x3106, 0x08
REG = 0x31ff, 0x01
REG = 0x3501, 0x05
REG = 0x3502, 0xba
REG = 0x3506, 0x00
REG = 0x3507, 0x00
REG = 0x3620, 0x67
REG = 0x3633, 0x78
;REG = 0x3662, 0x65      //RAW10
REG = 0x3662, 0x67      //RAW8
REG = 0x3666, 0x00
REG = 0x3670, 0x68
REG = 0x3674, 0x10
REG = 0x3675, 0x00
REG = 0x3680, 0x84
REG = 0x36a2, 0x04
REG = 0x36a3, 0x80
REG = 0x36b0, 0x00
REG = 0x3700, 0x35
REG = 0x3704, 0x59
REG = 0x3712, 0x00
REG = 0x3713, 0x02
REG = 0x379b, 0x01
REG = 0x379c, 0x10
REG = 0x3800, 0x00
REG = 0x3801, 0x00
REG = 0x3802, 0x00
REG = 0x3803, 0x00
REG = 0x3804, 0x06
REG = 0x3805, 0x4f
REG = 0x3806, 0x05
REG = 0x3807, 0x23
REG = 0x3808, 0x06
REG = 0x3809, 0x40
REG = 0x380a, 0x05
REG = 0x380b, 0x14
REG = 0x380c, 0x03
REG = 0x380d, 0x88
REG = 0x380e, 0x05
REG = 0x380f, 0xc2
REG = 0x3810, 0x00
REG = 0x3811, 0x08
REG = 0x3812, 0x00
REG = 0x3813, 0x08
REG = 0x3814, 0x11
REG = 0x3815, 0x11
REG = 0x3816, 0x00
REG = 0x3817, 0x00
REG = 0x3818, 0x04
REG = 0x3819, 0x00
REG = 0x3820, 0x00
REG = 0x3821, 0x00
REG = 0x382b, 0x5a
REG = 0x382c, 0x09
REG = 0x382d, 0x9a
REG = 0x3882, 0x02
REG = 0x3883, 0x6c
REG = 0x3885, 0x07
REG = 0x389d, 0x03
REG = 0x38a6, 0x00
REG = 0x38a7, 0x01
REG = 0x38b3, 0x07
REG = 0x38b1, 0x00
REG = 0x38e5, 0x02
REG = 0x38e7, 0x00
REG = 0x38e8, 0x00
REG = 0x3910, 0xff
REG = 0x3911, 0xff
REG = 0x3912, 0x08
REG = 0x3913, 0x00
REG = 0x3914, 0x00
REG = 0x3915, 0x00
REG = 0x391c, 0x00
REG = 0x3920, 0xa5
REG = 0x3921, 0x00
REG = 0x3922, 0x00
REG = 0x3923, 0x00
REG = 0x3924, 0x05
REG = 0x3925, 0x00
REG = 0x3926, 0x00
REG = 0x3927, 0x00
REG = 0x3928, 0x1a
REG = 0x392d, 0x05
REG = 0x392e, 0xf2
REG = 0x392f, 0x40
REG = 0x4001, 0x00
REG = 0x4003, 0x40
REG = 0x4008, 0x12
REG = 0x4009, 0x1b
REG = 0x400c, 0x0c
REG = 0x400d, 0x13
REG = 0x4010, 0xf0
REG = 0x4011, 0x00
REG = 0x4016, 0x00
REG = 0x4017, 0x04
REG = 0x4042, 0x11
REG = 0x4043, 0x70
REG = 0x4045, 0x00
REG = 0x4409, 0x5f
REG = 0x450b, 0x00
REG = 0x4600, 0x00
REG = 0x4601, 0xa0
REG = 0x4708, 0x09
REG = 0x470c, 0x81
REG = 0x4710, 0x06
REG = 0x4711, 0x00
REG = 0x4800, 0x00
REG = 0x481f, 0x30
REG = 0x4837, 0x14
REG = 0x4f00, 0x00
REG = 0x4f07, 0x00
REG = 0x4f08, 0x03
REG = 0x4f09, 0x08
REG = 0x4f0c, 0x06
REG = 0x4f0d, 0x02
REG = 0x4f10, 0x00
REG = 0x4f11, 0x00
REG = 0x4f12, 0x07
REG = 0x4f13, 0xe2
REG = 0x5000, 0x9f
REG = 0x5001, 0x20
REG = 0x5026, 0x00
REG = 0x5c00, 0x00
REG = 0x5c01, 0x2c
REG = 0x5c02, 0x00
REG = 0x5c03, 0x7f
REG = 0x5e00, 0x00
REG = 0x5e01, 0x41
REG = 0x0100, 0x01	
  


  
[register parameter][dev3][inf2]


[register parameter][dev3][inf3]

[board parameter]
;;REM	*********************************************		
;;REM	Start up sequence		
;;REM	*********************************************		
;REM	**************************************************		
;REM	TC358746XBG Software Reset		
;REM	**************************************************		
//REG = 0x0002, 0x0001	//SYSctl, S/W Reset
VRCMD = 0xE1, 0x1C00, 0x0002, 2, 0x00, 0x01
DELAY = 10		
//REG = 0x0002, 0x0000	//SYSctl, S/W Reset release
VRCMD = 0xE1, 0x1C00, 0x0002, 2, 0x00, 0x00
			
;REM	**************************************************		
;REM	TC358746XBG PLL,Clock Setting		
;REM	**************************************************		
//REG = 0x0016, 0x3077	//PLL Control Register 0 (PLL_PRD,PLL_FBD)
VRCMD = 0xE1, 0x1C00, 0x0016, 2, 0x10, 0x3B
//REG = 0x0018, 0x0403	//PLL_FRS,PLL_LBWS, PLL oscillation enable
VRCMD = 0xE1, 0x1C00, 0x0018, 2, 0x00, 0x03
DELAY = 10		
//REG = 0x0018, 0x0413	//PLL_FRS,PLL_LBWS, PLL clock out enable
VRCMD = 0xE1, 0x1C00, 0x0018, 2, 0x00, 0x13
//REG = 0x0020, 0x0011	//CLK control register: Clock divider setting
VRCMD = 0xE1, 0x1C00, 0x0020, 2, 0x00, 0x11
			
;REM	**************************************************		
;REM	TC358746XBG MCLK Output		
;REM	**************************************************		
//REG = 0x000C, 0x0101	//MCLK duty setting
;VRCMD = 0xE1, 0x1C00, 0x000C, 2, 0x01, 0x01
			
;REM	**************************************************		
;REM	TC358746XBG GPIO2,1 Control (Example)		
;REM	**************************************************		
;REM	0010	FFF9	GPIO Direction, GPIO2,1 output
;REM	0014	0000	GPIO output data. GPIO2="L", GPIO1="L"
;REM	000E	0006	GPIO enable. GPIO2,1 enable
;REM	0014	0006	GPIO output data. GPIO2="H", GPIO1="H"
			
;REM	**************************************************		
;REM	TC358746XBG Format configuration, timing Setting		
;REM	**************************************************		
//REG = 0x0060, 0x800A	//PHY timing DELAY =  setting
VRCMD = 0xE1, 0x1C00, 0x0060, 2, 0x80, 0x08
//REG = 0x0006, 0x0032	//FIFO control
VRCMD = 0xE1, 0x1C00, 0x0006, 2, 0x00, 0x78
//REG = 0x0008, 0x0011	//Data format control
VRCMD = 0xE1, 0x1C00, 0x0008, 2, 0x00, 0x11
//REG = 0x0004, 0x8145	//Configuration control
VRCMD = 0xE1, 0x1C00, 0x0004, 2, 0x81, 0x45

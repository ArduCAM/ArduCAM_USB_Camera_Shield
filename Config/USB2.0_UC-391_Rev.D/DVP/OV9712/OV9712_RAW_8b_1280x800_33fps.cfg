;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = OV9712							
SIZE      = 1280, 800
BIT_WIDTH = 8 
FORMAT    = 0, 0	
I2C_MODE  = 0					
I2C_ADDR  = 0x60	
;TRANS_LVL = 64

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]

[board parameter][dev2]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x02

[board parameter][dev3][inf2]
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
;VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

[board parameter][dev3][inf3]
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
;VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

;**************************************************************************************/
; ----- register parameter -----
;[register parameter]					Register parameter set for USB2.0 & USB3.0 mode	
;[register parameter][dev2]				Register parameter set for USB2.0 mode
;[register parameter][dev3][inf2]		Register parameter set for USB3.0 mode and USB2.0 interface
;[register parameter][dev3][inf3]		Register parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

//  Reset
REG = 0x12, 0x80
DELAY = 50

//  Core Settings
REG = 0x1e, 0x07
REG = 0x5f, 0x18
REG = 0x69, 0x04
REG = 0x65, 0x2a
REG = 0x68, 0x0a
REG = 0x39, 0x28
REG = 0x4d, 0x90
REG = 0xc1, 0x80
REG = 0x0c, 0x30
REG = 0x6d, 0x02

//    DSP
REG = 0x96, 0xf1
REG = 0xbc, 0x68

//   Resolution and Format
REG = 0x12, 0x00
REG = 0x3b, 0x00
REG = 0x97, 0x80
REG = 0x17, 0x25
REG = 0x18, 0xa2
REG = 0x19, 0x01
REG = 0x1a, 0xca
REG = 0x03, 0x0a
REG = 0x32, 0x07
REG = 0x98, 0x00
REG = 0x99, 0x00
REG = 0x9a, 0x00
REG = 0x57, 0x00
REG = 0x58, 0xc8
REG = 0x59, 0xa0
REG = 0x4c, 0x13
REG = 0x4b, 0x36
REG = 0x3d, 0x3c
REG = 0x3e, 0x03
REG = 0xbd, 0xa0
REG = 0xbe, 0xc8
REG = 0x96, 0xf9
REG = 0x9e, 0x00
REG = 0x9f, 0x80
REG = 0xa0, 0xf1
REG = 0xa1, 0x6a
REG = 0xa2, 0x00
REG = 0xa3, 0x80
REG = 0xa4, 0x90
REG = 0xa5, 0x12
REG = 0xa6, 0x16
REG = 0xa7, 0xc2
REG = 0xa8, 0x84
REG = 0xa9, 0x80
REG = 0xaa, 0x90
REG = 0xab, 0x12
REG = 0xac, 0x1c
REG = 0xad, 0xc2
REG = 0xae, 0x85
REG = 0xaf, 0x80
REG = 0xb0, 0x90
REG = 0xb1, 0x12
REG = 0xb2, 0x18
REG = 0xb3, 0xc2
REG = 0xb4, 0x85
REG = 0xb5, 0x00

//   YAVG
REG = 0x4e, 0x55
REG = 0x4f, 0x55
REG = 0x50, 0x55
REG = 0x51, 0x55
REG = 0x24, 0x55
REG = 0x25, 0x40
REG = 0x26, 0xa1

//  Clock
REG = 0x5c, 0x59
REG = 0x5d, 0x00
REG = 0x11, 0x00
REG = 0x2a, 0x9b
REG = 0x2b, 0x06
REG = 0x2d, 0x00
REG = 0x2e, 0x00

//   General
REG = 0x13, 0x85
REG = 0x14, 0x40
REG = 0x16, 0x03
REG = 0x00, 0x02

REG = 0xc2, 0x81
REG = 0x04, 0x80
REG = 0x11, 0x1
REG = 0x5c, 0x61
REG = 0x5d, 0x00

[register parameter][dev3][inf2]


[register parameter][dev3][inf3]
 


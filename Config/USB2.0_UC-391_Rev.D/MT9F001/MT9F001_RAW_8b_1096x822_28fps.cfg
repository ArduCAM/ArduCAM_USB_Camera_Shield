;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = MT9F001								
SIZE      = 1096, 822
BIT_WIDTH = 8 
FORMAT    = 0, 0	
I2C_MODE  = 3					
I2C_ADDR  = 0x20
;TRANS_LVL = 64			

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		;<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]


[board parameter][dev2]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
;VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

[board parameter][dev3][inf3]
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
;VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             ;<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
//[=========== Macros Called During Demo Initialization ==============]
//[Default Register Changes Revision 1]
REG= 0x3154, 0x2C00	//Reserved
REG= 0x3156, 0x4A80	//Reserved
REG= 0x30D4, 0xB400	//Reserved
REG= 0x30B2, 0x8000	//Reserved
REG= 0x30BC, 0x0F00	//Reserved
REG= 0x30C0, 0x0121	//Reserved
REG= 0x3ED2, 0xAF60	//Reserved
REG= 0x3ED4, 0xAA84	//Reserved
REG= 0x3ED8, 0x20A0	//Reserved
REG= 0x3EE0, 0xE3A3	//Reserved
REG= 0x3EE4, 0x630D	//Reserved
REG= 0x3EE6, 0x87E6	//Reserved
REG= 0x3EE8, 0x0046	//Reserved
REG= 0x3EEC, 0x1023	//Reserved
REG= 0x3EEE, 0x5550	//Reserved
REG= 0x3EF0, 0x1010	//Reserved
REG= 0x3EF2, 0xA660	//Reserved
REG= 0x3EF4, 0x96A4	//Reserved
REG= 0x3EF6, 0x9899	//Reserved

//[Default Register Changes Revision 2 and above]
REG= 0x3154, 0x2C00	//Reserved
REG= 0x3156, 0x4A80	//Reserved
REG= 0x30D4, 0xB400	//Reserved
REG= 0x3ED2, 0xAF60	//Reserved
REG= 0x3ED4, 0xAA84	//Reserved
REG= 0x3EE4, 0x630D	//Reserved
REG= 0x3EE8, 0x0046	//Reserved


//[HIDDEN: Recommended Sequencer Update - SVN 8627 - Parallel]
// @00 Jump Table
REG=0x3D00, 0x0439
REG=0x3D02, 0x47FF
REG=0x3D04, 0x618D
REG=0x3D06, 0xFFFF
// @04 Read
REG=0x3D08, 0x8173
REG=0x3D0A, 0x770A
REG=0x3D0C, 0x0110
REG=0x3D0E, 0x1B2C
REG=0x3D10, 0x4330
REG=0x3D12, 0x5881
REG=0x3D14, 0x5C64
REG=0x3D16, 0x8C61
REG=0x3D18, 0x8D60
REG=0x3D1A, 0x813A
REG=0x3D1C, 0x0081
REG=0x3D1E, 0x6780
REG=0x3D20, 0x5F9A
REG=0x3D22, 0x5A82
REG=0x3D24, 0x5996
REG=0x3D26, 0x4982
REG=0x3D28, 0x0140
REG=0x3D2A, 0xFF91
REG=0x3D2C, 0x4C99
REG=0x3D2E, 0x1A00
REG=0x3D30, 0x4880
REG=0x3D32, 0x4680
REG=0x3D34, 0x0A02
REG=0x3D36, 0x4086
REG=0x3D38, 0x4782
REG=0x3D3A, 0x4AEE
REG=0x3D3C, 0x4D92
REG=0x3D3E, 0x4A80
REG=0x3D40, 0x4740
REG=0x3D42, 0x0802
REG=0x3D44, 0x8242
REG=0x3D46, 0x8345
REG=0x3D48, 0xA342
REG=0x3D4A, 0x9545
REG=0x3D4C, 0x834F
REG=0x3D4E, 0x821A
REG=0x3D50, 0x009B
REG=0x3D52, 0x46FF
REG=0x3D54, 0x9249
REG=0x3D56, 0x8046
REG=0x3D58, 0x8041
REG=0x3D5A, 0x8040
REG=0x3D5C, 0x8E47
REG=0x3D5E, 0xFF97
REG=0x3D60, 0x4B80
REG=0x3D62, 0x4780
REG=0x3D64, 0x4180
REG=0x3D66, 0x5086
REG=0x3D68, 0x2FD5
REG=0x3D6A, 0x3A51
REG=0x3D6C, 0x7377
REG=0x3D6E, 0x847C
REG=0x3D70, 0x6F70
REG=0x3D72, 0x8085
REG=0x3D74, 0x6A82
REG=0x3D76, 0x6742
REG=0x3D78, 0x8244
REG=0x3D7A, 0x831A
REG=0x3D7C, 0x0099
REG=0x3D7E, 0x44DF
REG=0x3D80, 0x1A00
REG=0x3D82, 0x8542
REG=0x3D84, 0x8567
REG=0x3D86, 0x826A
REG=0x3D88, 0x857C
REG=0x3D8A, 0x7380
REG=0x3D8C, 0x7000
REG=0x3D8E, 0xB831
REG=0x3D90, 0x40BE
REG=0x3D92, 0x6700
REG=0x3D94, 0x0CBD
REG=0x3D96, 0x4482
REG=0x3D98, 0x7898
REG=0x3D9A, 0x7480
REG=0x3D9C, 0x5680
REG=0x3D9E, 0x9755
REG=0x3DA0, 0x8057
REG=0x3DA2, 0x8056
REG=0x3DA4, 0x9256
REG=0x3DA6, 0x8057
REG=0x3DA8, 0x8055
REG=0x3DAA, 0x817C
REG=0x3DAC, 0x9E9B
REG=0x3DAE, 0x56A6
REG=0x3DB0, 0x44BE
REG=0x3DB2, 0x000C
REG=0x3DB4, 0x867A
REG=0x3DB6, 0x9474
REG=0x3DB8, 0x8A79
REG=0x3DBA, 0x9367
REG=0x3DBC, 0xBF6A
REG=0x3DBE, 0x816C
REG=0x3DC0, 0x8570
REG=0x3DC2, 0x802C
REG=0x3DC4, 0x9168
REG=0x3DC6, 0x7780
REG=0x3DC8, 0x5923
REG=0x3DCA, 0x4030
REG=0x3DCC, 0x4973
REG=0x3DCE, 0x0A01
REG=0x3DD0, 0x101B
REG=0x3DD2, 0x8D3A
REG=0x3DD4, 0x0085
REG=0x3DD6, 0x6781
REG=0x3DD8, 0x5A59
REG=0x3DDA, 0x8149
REG=0x3DDC, 0x8448
REG=0x3DDE, 0x8346
REG=0x3DE0, 0xEC4C
REG=0x3DE2, 0x8748
REG=0x3DE4, 0x460A
REG=0x3DE6, 0x0382
REG=0x3DE8, 0x0480
REG=0x3DEA, 0x851A
REG=0x3DEC, 0x00BE
REG=0x3DEE, 0x4D8B
REG=0x3DF0, 0x4A47
REG=0x3DF2, 0x0803
REG=0x3DF4, 0x8200
REG=0x3DF6, 0x2492
REG=0x3DF8, 0x0024
REG=0x3DFA, 0x4F87
REG=0x3DFC, 0x1A00
REG=0x3DFE, 0xA746
REG=0x3E00, 0xCD49
REG=0x3E02, 0x4600
REG=0x3E04, 0x0380
REG=0x3E06, 0x47E8
REG=0x3E08, 0x4B47
REG=0x3E0A, 0x4173
REG=0x3E0C, 0x503A
REG=0x3E0E, 0x4123
REG=0x3E10, 0x447C
REG=0x3E12, 0xC82C
REG=0x3E14, 0x9168
REG=0x3E16, 0x8077
REG=0x3E18, 0x8070
REG=0x3E1A, 0x8085
REG=0x3E1C, 0x6A82
REG=0x3E1E, 0x6742
REG=0x3E20, 0x8244
REG=0x3E22, 0x831A
REG=0x3E24, 0x0099
REG=0x3E26, 0x44DF
REG=0x3E28, 0x1A00
REG=0x3E2A, 0x8542
REG=0x3E2C, 0x8567
REG=0x3E2E, 0x826A
REG=0x3E30, 0x857D
REG=0x3E32, 0x1B80
REG=0x3E34, 0x7000
REG=0x3E36, 0x0000
REG=0x3E38, 0x0000
REG=0x3E3A, 0x0000
REG=0x3E3C, 0x0000
REG=0x3E3E, 0x0000
REG=0x3E40, 0x0000
REG=0x3E42, 0x0000
REG=0x3E44, 0x0000
REG=0x3E46, 0x0000
REG=0x3E48, 0x0000
REG=0x3E4A, 0x0000
REG=0x3E4C, 0x0000
REG=0x3E4E, 0x0000
REG=0x3E50, 0x0000
REG=0x3E52, 0x0000
REG=0x3E54, 0x0000
REG=0x3E56, 0x0000
REG=0x3E58, 0x0000
REG=0x3E5A, 0x0000
REG=0x3E5C, 0x0000
REG=0x3E5E, 0x0000
REG=0x3E60, 0x0000
REG=0x3E62, 0x0000
REG=0x3E64, 0x0000
REG=0x3E66, 0x0000
REG=0x3E68, 0x0000
REG=0x3E6A, 0x0000
REG=0x3E6C, 0x0000
REG=0x3E6E, 0x0000
REG=0x3E70, 0x0000
REG=0x3E72, 0x0000
REG=0x3E74, 0x0000
REG=0x3E76, 0x0000
REG=0x3E78, 0x0000
REG=0x3E7A, 0x0000
REG=0x3E7C, 0x0000
REG=0x3E7E, 0x0000
REG=0x3E80, 0x0000
REG=0x3E82, 0x0000
REG=0x3E84, 0x0000
REG=0x3E86, 0x0000
REG=0x3E88, 0x0000
REG=0x3E8A, 0x0000
REG=0x3E8C, 0x0000
REG=0x3E8E, 0x0000
REG=0x3E90, 0x0000
REG=0x3E92, 0x0000
REG=0x3E94, 0x0000
REG=0x3E96, 0x0000
REG=0x3E98, 0x0000
REG=0x3E9A, 0x0000
REG=0x3E9C, 0x0000
REG=0x3E9E, 0x0000
REG=0x3EA0, 0x0000
REG=0x3EA2, 0x0000
REG=0x3EA4, 0x0000
REG=0x3EA6, 0x0000
REG=0x3EA8, 0x0000
REG=0x3EAA, 0x0000
REG=0x3EAC, 0x0000
REG=0x3EAE, 0x0000
REG=0x3EB0, 0x0000
REG=0x3EB2, 0x0000
REG=0x3EB4, 0x0000
REG=0x3EB6, 0x0000
REG=0x3EB8, 0x0000
REG=0x3EBA, 0x0000
REG=0x3EBC, 0x0000
REG=0x3EBE, 0x0000
REG=0x3EC0, 0x0000
REG=0x3EC2, 0x0000
REG=0x3EC4, 0x0000
REG=0x3EC6, 0x0000
REG=0x3EC8, 0x0000
REG=0x3ECA, 0x0000
; -- MT9F002 Config --
;Turn sensor streaming OFF 
REG = 0x0103, 0x1	//Software Reset = 0x1
DELAY = 300
REG = 0x31AE, 0x301	//Serial Format = 0x301
REG = 0x0112, 0x0C0C	//CCP Data Format = 0xC0C
REG = 0x301A, 0x0010	//Reset Register = 0x10
REG = 0x3064, 0x0805	//SMIA Test = 0x805
REG = 0x301E, 0x00A8	//Data Pedestal = 0xA8
REG = 0x301A, 0x10DC	//Reset Register = 0x10DC
REG = 0x0104, 0x1	//Grouped Parameter Hold = 0x1
REG = 0x0100, 0x0	//Mode Select = 0x0
REG = 0x0300, 0x6	//vt_pix_clk_div = 0x6
REG = 0x0302, 0x01	//vt_sys_clk_div = 0x1
REG = 0x0304, 0x04	//pre_pll_clk_div = 0x4
REG = 0x0306, 0x6E	//pll_multiplier = 0x6E
REG = 0x0308, 0x0C	//op_pix_clk_div = 0xC
REG = 0x030A, 0x01	//op_sys_clk_div = 0x1
REG = 0x3016, 0x111	//Row Speed = 0x111
REG = 0x0344, 0x090	//Column Start = 0x90
REG = 0x0348, 0x11A9	//Column End = 0x11A9
REG = 0x0346, 0x020	//Row Start = 0x20
REG = 0x034A, 0xCF1	//Row End = 0xCF1
REG = 0x3040, 0x05C7	//Read Mode = 0x5C7
REG = 0x0400, 0x0	//Scaling Mode = 0x0
REG = 0x0404, 0x10	//Scale_M = 0x10
REG = 0x034C, 0x448	//Output Width = 0x448
REG = 0x034E, 0x336	//Output Height = 0x336
REG = 0x0342, 0x094B	//Line Length = 0x94B
REG = 0x0340, 0x0691	//Frame Lines = 0x691
REG = 0x3010, 0x0360	//Fine Correction = 0x360
REG = 0x3012, 0x002E	//Coarse Integration Time = 0x2E
REG = 0x3014, 0x0C44	//Fine Integration Time = 0xC44
REG = 0x3018, 0x0000	//Extra Delay = 0x0
;BITFIELD = 0x30D4, 0x6000, 0x0000   //Column Correction, bits 0x6000 = 0
;BITFIELD = 0x3176, 0x4000, 0x0000   //Fast Timing, bits 0x4000 = 0
;BITFIELD = 0x3178, 0x4000, 0x0000   //ANALOG_CONTROL5, bits 0x4000 = 0
;BITFIELD = 0x317C, 0x4000, 0x0001   //Overlap Sampling, bits 0x4000 = 1
;BITFIELD = 0x3EE8, 0x1, 0x1   //DAC_LD_28_29, bits 0x1 = 1
;BITFIELD = 0x3EEA, 0x70, 0x07   //DAC_LD_30_31, bits 0x70 = 7
;BITFIELD = 0x301A, 0x2, 0x1   //Restart Frame, bits 0x2 = 1
REG = 0x0104, 0x0	//Grouped Parameter Hold = 0x0
REG = 0x0100, 0x1	//Mode Select = 0x1

REG = 0x3040, 0x83C7

REG = 0x0206, 33  
REG = 0x0208, 50  
REG = 0x020a, 50  
REG = 0x020c, 33  
;REG = 0x0204, 128  

REG = 0x3012, 0x500

REG = 0x0100, 0x102

REG = 0x0300, 0x3

[register parameter][dev3][inf2]
REG = 0x0304, 8 

[register parameter][dev3][inf3]
REG = 0x0304, 3 

;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/[camera parameter]
[camera parameter]
CFG_MODE  = 0	
TYPE      = MT9F002_HISPI
SIZE      = 4608, 3288
BIT_WIDTH = 12 
FORMAT    = 0, 3	
I2C_MODE  = 3					
I2C_ADDR  = 0x20		
;TRANS_LVL = 64

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x85
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x12
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x0C
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xD8
VRCMD = 0xD7, 0x4600, 0x1400, 1, 0x01


[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C


[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             ;<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

REG = 0x301a, 0x0010
REG = 0x305e, 0x1430
REG = 0x301a, 0x0010
REG = 0x3600, 0x16f0
REG = 0x3602, 0x4cad
REG = 0x3604, 0x7b0b
REG = 0x3606, 0xe668
REG = 0x3608, 0xcfae
REG = 0x360a, 0x1510
REG = 0x360c, 0xad4a
REG = 0x360e, 0x386a
REG = 0x3610, 0x7a2c
REG = 0x3612, 0xeb8e
REG = 0x3614, 0x1570
REG = 0x3616, 0x128d
REG = 0x3618, 0x2a4c
REG = 0x361a, 0x954b
REG = 0x361c, 0xc02f
REG = 0x361e, 0x1410
REG = 0x3620, 0xdc0a
REG = 0x3622, 0x544c
REG = 0x3624, 0x39cd
REG = 0x3626, 0xcf6e
REG = 0x3640, 0xc76d
REG = 0x3642, 0xca0b
REG = 0x3644, 0x7d2e
REG = 0x3646, 0x98ae
REG = 0x3648, 0xdf4d
REG = 0x364a, 0xdd2d
REG = 0x364c, 0x412a
REG = 0x364e, 0x1a8e
REG = 0x3650, 0x802e
REG = 0x3652, 0x4b2f
REG = 0x3654, 0xae2d
REG = 0x3656, 0x5306
REG = 0x3658, 0x7e2e
REG = 0x365a, 0x00ea
REG = 0x365c, 0x61a8
REG = 0x365e, 0xfa4c
REG = 0x3660, 0xebab
REG = 0x3662, 0x06cf
REG = 0x3664, 0xa84d
REG = 0x3666, 0x14cb
REG = 0x3680, 0x0a6d
REG = 0x3682, 0xc2cd
REG = 0x3684, 0x8b11
REG = 0x3686, 0x66cf
REG = 0x3688, 0x5bf2
REG = 0x368a, 0x2cec
REG = 0x368c, 0x8c8e
REG = 0x368e, 0xd0f1
REG = 0x3690, 0x1110
REG = 0x3692, 0x44b3
REG = 0x3694, 0x340e
REG = 0x3696, 0xfe0d
REG = 0x3698, 0xc611
REG = 0x369a, 0x09f0
REG = 0x369c, 0x18b3
REG = 0x369e, 0x37cd
REG = 0x36a0, 0x9c2d
REG = 0x36a2, 0x8651
REG = 0x36a4, 0x3acf
REG = 0x36a6, 0x5312
REG = 0x36c0, 0x8630
REG = 0x36c2, 0x8070
REG = 0x36c4, 0x6fed
REG = 0x36c6, 0x1d6d
REG = 0x36c8, 0xbdd3
REG = 0x36ca, 0xb130
REG = 0x36cc, 0x926f
REG = 0x36ce, 0x29b2
REG = 0x36d0, 0x45ef
REG = 0x36d2, 0xc434
REG = 0x36d4, 0xa830
REG = 0x36d6, 0xac6f
REG = 0x36d8, 0x9e0f
REG = 0x36da, 0xccf1
REG = 0x36dc, 0xf2d2
REG = 0x36de, 0xdfaf
REG = 0x36e0, 0xbc6e
REG = 0x36e2, 0x1410
REG = 0x36e4, 0xafb1
REG = 0x36e6, 0x9134
REG = 0x3700, 0xc991
REG = 0x3702, 0x840e
REG = 0x3704, 0x60d3
REG = 0x3706, 0xd412
REG = 0x3708, 0xc535
REG = 0x370a, 0x80b2
REG = 0x370c, 0x4c0f
REG = 0x370e, 0x62b4
REG = 0x3710, 0x8f72
REG = 0x3712, 0xacb6
REG = 0x3714, 0x8912
REG = 0x3716, 0xba6b
REG = 0x3718, 0x6df3
REG = 0x371a, 0x8113
REG = 0x371c, 0xba75
REG = 0x371e, 0xbcf1
REG = 0x3720, 0x2f6f
REG = 0x3722, 0x6fd3
REG = 0x3724, 0xac53
REG = 0x3726, 0xe875
REG = 0x3782, 0x0920
REG = 0x3784, 0x0820
REG = 0x37c0, 0x0000
REG = 0x37c2, 0x0000
REG = 0x37c4, 0x0000
REG = 0x37c6, 0x0000
REG = 0x3780, 0x8000
REG = 0x31ae, 0x0304        // SERIAL_FORMAT
REG = 0x301a, 0x0010
REG = 0x301a, 0x0010
REG = 0x3eda, 0xe525
REG = 0x30e8, 0x0000
REG = 0x30ea, 0xf873
REG = 0x30ea, 0x08aa
REG = 0x30ea, 0x3219
REG = 0x30ea, 0x3219
REG = 0x30ea, 0x3219
REG = 0x30ea, 0x3200
REG = 0x30ea, 0x3200
REG = 0x30ea, 0x3200
REG = 0x30ea, 0x3200
REG = 0x30ea, 0x3200
REG = 0x30ea, 0x1769
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xa6f3
REG = 0x30ea, 0xaff3
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xf164
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xfa64
REG = 0x30ea, 0xf164
REG = 0x30ea, 0x276e
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x28cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x18cf
REG = 0x30ea, 0x2363
REG = 0x30ea, 0x2363
REG = 0x30ea, 0x2352
REG = 0x30ea, 0x2363
REG = 0x30ea, 0x2363
REG = 0x30ea, 0x2363
REG = 0x30ea, 0x2352
REG = 0x30ea, 0x2352
REG = 0x30ea, 0xa394
REG = 0x30ea, 0xa394
REG = 0x30ea, 0x8f8f
REG = 0x30ea, 0xa3d4
REG = 0x30ea, 0xa394
REG = 0x30ea, 0xa394
REG = 0x30ea, 0x8f8f
REG = 0x30ea, 0x8fcf
REG = 0x30ea, 0xdc23
REG = 0x30ea, 0xdc63
REG = 0x30ea, 0xdc63
REG = 0x30ea, 0xdc23
REG = 0x30ea, 0xdc23
REG = 0x30ea, 0xdc63
REG = 0x30ea, 0xdc63
REG = 0x30ea, 0xdc23
REG = 0x30ea, 0x0f73
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c0
REG = 0x30ea, 0x85c4
REG = 0x30ea, 0x0000
REG = 0x3176, 0x8000
REG = 0x3eda, 0xe525
REG = 0x301e, 0x00a8
REG = 0x3064, 0x0845
REG = 0x301a, 0x0008
REG = 0x0400, 0x0000
REG = 0x306e, 0x9080
REG = 0x306e, 0x9080
REG = 0x0300, 0x0005
REG = 0x0302, 0x0001
REG = 0x0304, 0x0006
//REG = 0x0306, 0x0089    // PLL_MULTIPLIER
REG = 0x0306, 0x0040
REG = 0x0308, 0x000A    // for Nbit
REG = 0x030a, 0x0001
REG = 0x3064, 0x0845
REG = 0x0112, 0x0A0A    // CCP_DATA_FORMAT Nbit
REG = 0x301a, 0x8008
REG = 0x3176, 0x8000
REG = 0x3004, 0x0020
REG = 0x3008, 0x121d
REG = 0x3002, 0x017c
REG = 0x3006, 0x0b99
REG = 0x3044, 0x0580
REG = 0x3040, 0x00c1
REG = 0x3040, 0x00c3
REG = 0x3016, 0x0111
REG = 0x3040, 0x04c3
REG = 0x3040, 0x04c3
REG = 0x3178, 0x0000
REG = 0x3178, 0x0000
REG = 0x3178, 0x0000
REG = 0x3178, 0x0000
REG = 0x3ee8, 0x0047
REG = 0x0400, 0x0000
REG = 0x0404, 0x0010
REG = 0x034c, 0x0900
REG = 0x034e, 0x0510
REG = 0x30d4, 0xb400
REG = 0x30d4, 0xb100
REG = 0x30ee, 0x0020
REG = 0x0342, 0x13d8
REG = 0x0340, 0x059f
REG = 0x3012, 0x059f
REG = 0x3010, 0x0204
REG = 0x3014, 0x0db6
REG = 0x3018, 0x0000
REG = 0x3ee4, 0x6349
REG = 0x317c, 0xe00a
REG = 0x301a, 0x8008
REG = 0x30e8, 0x8005
REG = 0x317c, 0xc00a
REG = 0x3ee8, 0x0047
REG = 0x3eea, 0x15f0
REG = 0x3eea, 0x15f0
REG = 0x3eea, 0x15f0
REG = 0x3ee8, 0x0047
REG = 0x3ee8, 0x0047
REG = 0x301a, 0x0008
REG = 0x301a, 0x000c
REG = 0x0206, 0x0010
REG = 0x0208, 0x0010
REG = 0x020a, 0x0010
REG = 0x020c, 0x0010
REG = 0x020e, 0x0100
REG = 0x0210, 0x0100
REG = 0x0212, 0x0100
REG = 0x0214, 0x0100
REG = 0x0104, 0x0001
REG = 0x0104, 0x0001
REG = 0x3056, 0x1420
REG = 0x305c, 0x1420
REG = 0x305a, 0x1420
REG = 0x3058, 0x1420
REG = 0x0104, 0x0000
REG = 0x0202, 0x0287
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x00c2
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x00b3
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x00a7
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x009d
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x0095
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x008f
REG = 0x0104, 0x0000
REG = 0x0104, 0x0001
REG = 0x0202, 0x008a
REG = 0x0104, 0x0000


REG= 0x0202, 0x0187 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x0157 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x042D // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x037F // COARSE_INTEGRATION_TIME
REG= 0x301A, 0x0008 // RESET_REGISTER
DELAY= 20
REG= 0x0400, 0x0000 // SCALING_MODE
REG= 0x306E, 0x9080 // DATAPATH_SELECT
REG= 0x306E, 0x9080 // DATAPATH_SELECT
REG= 0x0300, 0x0006 // VT_PIX_CLK_DIV
REG= 0x0302, 0x0001 // VT_SYS_CLK_DIV
REG= 0x0304, 0x0006 // PRE_PLL_CLK_DIV
REG= 0x0306, 0x00A5 // PLL_MULTIPLIER
REG= 0x0308, 0x000C // OP_PIX_CLK_DIV
REG= 0x030A, 0x0001 // OP_SYS_CLK_DIV
REG= 0x3064, 0x0845 // RESERVED_MFR_3064
REG= 0x0112, 0x0C0C // CCP_DATA_FORMAT
REG= 0x301A, 0x8008 // RESET_REGISTER
REG= 0x3176, 0x8000 // RESERVED_MFR_3176
REG= 0x3004, 0x0020 // X_ADDR_START_
REG= 0x3008, 0x121F // X_ADDR_END_
REG= 0x3002, 0x0020 // Y_ADDR_START_
REG= 0x3006, 0x0CF7 // Y_ADDR_END_
REG= 0x3044, 0x0580 // RESERVED_MFR_3044
REG= 0x3040, 0x0041 // READ_MODE
REG= 0x3040, 0x0041 // READ_MODE
REG= 0x3016, 0x0111 // ROW_SPEED
REG= 0x3040, 0x0041 // READ_MODE
REG= 0x3040, 0x0041 // READ_MODE
REG= 0x3178, 0x0000 // ANALOG_CONTROL5
REG= 0x3178, 0x0000 // ANALOG_CONTROL5
REG= 0x3178, 0x0000 // ANALOG_CONTROL5
REG= 0x3178, 0x0000 // ANALOG_CONTROL5
REG= 0x3EE8, 0x0047 // RESERVED_MFR_3EE8
REG= 0x0400, 0x0000 // SCALING_MODE
REG= 0x0404, 0x0010 // SCALE_M
REG= 0x034C, 0x1200 // X_OUTPUT_SIZE
REG= 0x034E, 0x0CD8 // Y_OUTPUT_SIZE
REG= 0x30D4, 0xB080 // RESERVED_MFR_30D4
REG= 0x30D4, 0xB080 // RESERVED_MFR_30D4
REG= 0x30EE, 0x0019 // DARK_CONTROL3
REG= 0x0342, 0x14DC // LINE_LENGTH_PCK
REG= 0x0340, 0x0D67 // FRAME_LENGTH_LINES
REG= 0x3012, 0x0D67 // COARSE_INTEGRATION_TIME_
REG= 0x3010, 0x00D8 // FINE_CORRECTION
REG= 0x3014, 0x04A6 // FINE_INTEGRATION_TIME_
REG= 0x3018, 0x0000 // EXTRA_DELAY
REG= 0x3EE4, 0x6309 // RESERVED_MFR_3EE4
REG= 0x317C, 0xE00A // RESERVED_MFR_317C
REG= 0x301A, 0x8008 // RESET_REGISTER
DELAY= 20
REG= 0x30E8, 0x8001 // CTX_CONTROL_REG
REG= 0x317C, 0xE00A // RESERVED_MFR_317C
REG= 0x3EE8, 0x0047 // RESERVED_MFR_3EE8
REG= 0x3EEA, 0x1580 // RESERVED_MFR_3EEA
REG= 0x3EEA, 0x1580 // RESERVED_MFR_3EEA
REG= 0x3EEA, 0x1580 // RESERVED_MFR_3EEA
REG= 0x3EE8, 0x0047 // RESERVED_MFR_3EE8
REG= 0x3EE8, 0x0047 // RESERVED_MFR_3EE8
DELAY= 20
REG= 0x301A, 0x0008 // RESET_REGISTER
REG= 0x301A, 0x000C // RESET_REGISTER
REG= 0x0202, 0x0BF6 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x08E9 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x06D9 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x054E // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x0429 // COARSE_INTEGRATION_TIME
REG= 0x0202, 0x0342 // COARSE_INTEGRATION_TIME


REG = 0x0306, 0x0044    //PLL_MULTIPLIER
REG = 0x31ae, 0x0304    //SERIAL_FORMAT
REG = 0x0308, 0x000C    //for Nbit
REG = 0x0112, 0x0C0C    //CCP_DATA_FORMAT Nbit
REG = 0x31C6, 0x8400    //Packetized-SP
REG = 0x3012, 0x0500    //coarse_integration_time
REG = 0x3040, 0x40C3    //read mode

REG = 0x0382, 0x0000    
REG = 0x0386, 0x0000

REG = 0x306E, 0x9280    // DATAPATH_SELECT


REG = 0x3004, 0x0020    // X_ADDR_START
REG = 0x3008, 0x121F    // X_ADDR_END
REG = 0x3002, 0x0020    // Y_ADDR_START
REG = 0x3006, 0x0CF7    // Y_ADDR_END
REG = 0x034c, 0x1200    // X_OUTPUT_SIZE
REG = 0x034e, 0x0CD8    // Y_OUTPUT_SIZE

REG = 0x305e, 0x1430    //global gain
;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = AR0234_2lane
SIZE      = 1920, 1200 
BIT_WIDTH = 10 
FORMAT    = 0, 2
I2C_MODE  = 3					
I2C_ADDR  = 0x20
;TRANS_LVL = 128


//------------------------------------------------------//
[control parameter]
MIN_VALUE   = 10
MAX_VALUE   = 400
STEP        = 1
DEF 		= 100
CTRL_NAME	= Sensor_Digital_Gain_R(Rate:0.01x)
FUNC_NAME	= setDigitalGainR
======CODE_BLOCK_START======
function setDigitalGainR(val)
    local gain = math.floor(val / 100 * 128)
	writeReg(0x305A, gain)
end
======CODE_BLOCK_END======
//------------------------------------------------------//
[control parameter]
MIN_VALUE   = 10
MAX_VALUE   = 400
STEP        = 1
DEF 		= 100
CTRL_NAME	= Sensor_Digital_Gain_B(Rate:0.01x)
FUNC_NAME	= setDigitalGainB
======CODE_BLOCK_START======
function setDigitalGainB(val)
    local gain = math.floor(val / 100 * 128)

	writeReg(0x3058, gain)
end
======CODE_BLOCK_END======
//------------------------------------------------------//

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x85
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x16
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x80
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x04
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xB0
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x03
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x80

[board parameter][dev2]


[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x45
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0


;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG= 0x301A, 0x2058 // RESET_REGISTER
DELAY= 200

REG = 0x302a, 0x0005
REG = 0x302c, 0x0001
REG = 0x302e, 0x0003
REG = 0x3030, 0x002D    //Pll Multiplier 
REG = 0x3036, 0x000a
REG = 0x3038, 0x0001
REG = 0x30b0, 0x0028
REG = 0x31b0, 0x0082
REG = 0x31b2, 0x005c
REG = 0x31b4, 0x51c8
REG = 0x31b6, 0x3257
REG = 0x31b8, 0x904b
REG = 0x31ba, 0x030b
REG = 0x31bc, 0x8e09
REG = 0x3354, 0x002b
REG = 0x31ae, 0x0202
REG = 0x3004, 0x0008
REG = 0x3006, 0x04b7
REG = 0x3008, 0x0787
REG = 0x300a, 0x04c0
REG = 0x300c, 0x0264
REG = 0x3012, 0x02dc
REG = 0x31ac, 0x0a0a
REG = 0x306e, 0x9010
REG = 0x30a2, 0x0001
REG = 0x30a6, 0x0001
REG = 0x3082, 0x0003
REG = 0x3040, 0x4000
REG = 0x31d0, 0x0000
REG = 0x3088, 0x8050
REG = 0x3086, 0x9237
REG = 0x3096, 0x0280
REG = 0x31e0, 0x0003
REG = 0x30b0, 0x0028
REG = 0x3f4c, 0x121f
REG = 0x3f4e, 0x121f
REG = 0x3f50, 0x0b81
REG = 0x3ed2, 0x5696
REG = 0x3180, 0x824f
REG = 0x3ecc, 0x0d42
REG = 0x3ecc, 0x0d42
REG = 0x30f0, 0x2283
REG = 0x3102, 0x5000
REG = 0x3060, 0x000d
REG = 0x30ba, 0x7622
REG = 0x301a, 0x205c
REG = 0x301a, 0x2058
REG = 0x301a, 0x205c
REG = 0x30b4, 0x0011
REG = 0x30b4, 0x0010
REG = 0x30b4, 0x0000
REG = 0x30b4, 0x0011
REG = 0x30b4, 0x0010
REG = 0x30b4, 0x0000
REG = 0x30b4, 0x0011
REG = 0x30b4, 0x0010
REG = 0x30b4, 0x0000

REG = 0x3ed0, 0xff44
REG = 0x3ed2, 0x0000
REG = 0x3ed4, 0x0000
                  
REG = 0x3060, 0x0010 // 1 time gain
REG = 0x3270, 0x0100 // FLASH 输出

//External Trigger
//REG = 0x301a, 0x2958
				  
[register parameter][dev3][inf2]


[register parameter][dev3][inf3]

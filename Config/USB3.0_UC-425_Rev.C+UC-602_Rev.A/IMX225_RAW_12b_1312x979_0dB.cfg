;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX225
;SIZE      = 1312, 994
SIZE      = 1312, 979
BIT_WIDTH = 12 
FORMAT    = 0, 3	
I2C_MODE  = 2					
I2C_ADDR  = 0x34		
;TRANS_LVL = 64		

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/

[board parameter]


[board parameter][dev2]


[board parameter][dev3][inf2]
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0001, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xF3, 0x0000, 0x0000, 0           
VRCMD = 0xF9, 0x0001, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x3000, 0x00 //1:Standby , 0:Operation


//960p ok */
REG = 0x3002,0x01  //add
REG = 0x3005,0x01  //add
REG = 0x3006,0x00 
REG = 0x3007,0x00 
REG = 0x3009,0x11  // modify
REG = 0x320c,0xcf 
REG = 0x300f,0x00 
REG = 0x310f,0x0f 
REG = 0x3110,0x0e 
REG = 0x3111,0xe7 
REG = 0x3012,0x2c 
REG = 0x3112,0x9c 
REG = 0x3013,0x01 
REG = 0x3113,0x83 
REG = 0x3014,0x00  // gain value [7:0]
REG = 0x3015,0x00  // gain value [9:8]
REG = 0x3114,0x10 
REG = 0x3115,0x42 
REG = 0x3016,0x09 
REG = 0x3018,0xE4  // VTS value [7:0]
REG = 0x3019,0x0C  // VTS value [15:8]
REG = 0x301a,0x00  // VTS value [16]
REG = 0x301b,0x94  // HTS value [7:0]
REG = 0x301c,0x11  // HTS value [13:8]
REG = 0x301d,0xc2 
REG = 0x3020,0x00  // SHS1 value; Integration time = 1 frame period - (SHS1 + 1) * (1H period)
REG = 0x3021,0x00 
REG = 0x3022,0x00 
REG = 0x3128,0x1e 
REG = 0x3049,0x0a  // Vsync Hsync output
REG = 0x324c,0x40 
REG = 0x324d,0x03 
REG = 0x305c,0x2C  // input clk;When the clk is 37.125M or 74.25M, it is 0x20; then 27M or 54M, it's 0x2c
REG = 0x305d,0x00  // input clk;When the clk is 54M or 74.25M, it is 0x10; then 27M or 37.125M, it's 0x00
REG = 0x305e,0x2C  // input clk;When the clk is 37.125M or 74.25M, it is 0x20; then 27M or 54M, it's 0x2c
REG = 0x305f,0x00  // input clk;When the clk is 54M or 74.25M, it is 0x10; then 27M or 37.125M, it's 0x00
REG = 0x3261,0xe0 
REG = 0x3262,0x02 
REG = 0x326e,0x2f 
REG = 0x326f,0x30 
REG = 0x3070,0x02 
REG = 0x3270,0x03 
REG = 0x3071,0x01 
REG = 0x3298,0x00 
REG = 0x329a,0x12 
REG = 0x329b,0xf1 
REG = 0x329c,0x0c 
REG = 0x309e,0x22
REG = 0x30a5,0xfb 
REG = 0x30a6,0x02 
REG = 0x30b3,0xff 
REG = 0x30b4,0x01 
REG = 0x30b5,0x42 
REG = 0x30b8,0x10 
REG = 0x30c2,0x01 
REG = 0x31ed,0x38 
REG = 0x3054,0x67   //0x67:CMOS; 0x66:MIPI

REG = 0x3043,0x00	//SYNC Code

REG = 0x3002,0x00   //XMSTA, 0: Master mode operation start, 1: Master mode operation stop
REG = 0x3044,0x01   //Output interface selection:
REG = 0x3049,0x0A   //XVS, XHS output

;gain
REG = 0x3015,0x00
REG = 0x3014,0x00   

;conversion gain
REG = 0x3009,0x11 

;exposure time
REG = 0x3018,0xe4
REG = 0x3019,0x0c
REG = 0x301a,0x00
REG = 0x3020,0x00
REG = 0x3021,0x00
REG = 0x3022,0x00

[register parameter][dev3][inf2]


[register parameter][dev3][inf3]

DELAY = 100
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x20
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x03
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xE2
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x0f
VRCMD = 0xD7, 0x4600, 0x1200, 1, 0x00

VRCMD = 0xD7, 0x4600, 0x0800, 1, 0x01

VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

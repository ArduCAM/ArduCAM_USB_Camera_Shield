;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = AR1820HS_2Lane
SIZE      = 2464, 1080
BIT_WIDTH = 8 
FORMAT    = 0, 3	
I2C_MODE  = 3					
I2C_ADDR  = 0x6E
;TRANS_LVL = 128

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x12
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x02
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x09
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0xA0
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x04
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x38
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01

VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev2]



[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0001, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0001, 0x0000, 0
;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             ;<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG= 0x301A, 0x001D // RESET_REGISTER
REG= 0x301A, 0x0018 // RESET_REGISTER
DELAY=100
REG= 0x301A, 0x0018 // RESET_REGISTER
DELAY=100
REG= 0x3042, 0x0004 // DARK_CONTROL2
REG= 0x30C0, 0xA000 // CALIB_CONTROL
REG= 0x30D4, 0x3000 // COLUMN_CORRECTION
REG= 0x30D6, 0x6800 // COLUMN_CORRECTION2
REG= 0x30DA, 0x0060 // COLUMN_CORRECTION_CLIP2
REG= 0x30DC, 0x0080 // COLUMN_CORRECTION_CLIP3
REG= 0x30EE, 0x3138 // DARK_CONTROL3
REG= 0x316A, 0x0000 // DAC_RSTLO
REG= 0x316C, 0x0400 // DAC_TXLO
REG= 0x316E, 0x0400 // DAC_ECL
REG= 0x3170, 0x236E // ANALOG_CONTROL
REG= 0x3172, 0x0286 // ANALOG_CONTROL2
REG= 0x3174, 0x0000 // ANALOG_CONTROL3
REG= 0x3176, 0x9000 // ANALOG_CONTROL4
REG= 0x3178, 0x0000 // ANALOG_CONTROL5
REG= 0x3180, 0xF800 // FINEDIGCORR_CONTROL
REG= 0x317A, 0x416E // ANALOG_CONTROL6
REG= 0x317C, 0xE104 // ANALOG_CONTROL7
REG= 0x3ED0, 0x00FF // DAC_LD_8_9
REG= 0x3ED4, 0x50C8 // DAC_LD_12_13
REG= 0x3EDE, 0x00E0 // DAC_LD_22_23
REG= 0x3EE0, 0x3558 // DAC_LD_24_25
REG= 0x3EE2, 0x8A3C // DAC_LD_26_27
REG= 0x3EE4, 0x2B79 // DAC_LD_28_29
REG= 0x3EE6, 0xF87A // DAC_LD_30_31
REG= 0x3EEA, 0x6400 // DAC_LD_34_35
REG= 0x3EEC, 0x0400 // DAC_LD_36_37
REG= 0x3EEE, 0x0000 // DAC_LD_38_39
REG= 0x3EF0, 0x043F // DAC_LD_40_41
REG= 0x3EFA, 0xA484 // DAC_LD_ECL
REG= 0x3EFC, 0x2020 // DAC_LD_RSTLO
REG= 0x3EFE, 0x9096 // DAC_LD_TXLO
REG= 0x3F20, 0x0249 // GTH_CONTROL
REG= 0x3F26, 0x4428 // GTH_THRES_BLK
REG= 0x3F2C, 0x111D // GTH_THRES_RTN
REG= 0x3F32, 0x1104 // GTH_THRES_CFPN
REG= 0x3F38, 0x1328 // GTH_THRES_FDOC
REG= 0x3F2F, 0x1123
REG= 0x3F38, 0x1328 // GTH_THRES_FDOC
REG= 0x3ECE, 0xA8A6 // DAC_LD_6_7
REG= 0x301A, 0x0018 // RESET_REGISTER
DELAY= 100
REG= 0x3D00, 0x0465
REG= 0x3D02, 0xB8FF
REG= 0x3D04, 0xFFFF
REG= 0x3D06, 0xFFFF
REG= 0x3D08, 0x3804
REG= 0x3D0A, 0x0005
REG= 0x3D0C, 0x170E
REG= 0x3D0E, 0x2180
REG= 0x3D10, 0x4180
REG= 0x3D12, 0x5C00
REG= 0x3D14, 0xC081
REG= 0x3D16, 0x5D80
REG= 0x3D18, 0x5A80
REG= 0x3D1A, 0x5780
REG= 0x3D1C, 0x200B
REG= 0x3D1E, 0x8150
REG= 0x3D20, 0x3301
REG= 0x3D22, 0x8500
REG= 0x3D24, 0xC082
REG= 0x3D26, 0x6064
REG= 0x3D28, 0x4281
REG= 0x3D2A, 0x658A
REG= 0x3D2C, 0x6580
REG= 0x3D2E, 0x6E87
REG= 0x3D30, 0x6E84
REG= 0x3D32, 0x5F9F
REG= 0x3D34, 0x6897
REG= 0x3D36, 0x5888
REG= 0x3D38, 0x5994
REG= 0x3D3A, 0x5B80
REG= 0x3D3C, 0x5B89
REG= 0x3D3E, 0x5881
REG= 0x3D40, 0x5A81
REG= 0x3D42, 0x5980
REG= 0x3D44, 0x5980
REG= 0x3D46, 0x5AD6
REG= 0x3D48, 0x5980
REG= 0x3D4A, 0x59F0
REG= 0x3D4C, 0x5081
REG= 0x3D4E, 0x6480
REG= 0x3D50, 0x6480
REG= 0x3D52, 0x6AAE
REG= 0x3D54, 0x4D85
REG= 0x3D56, 0x7A83
REG= 0x3D58, 0x6A82
REG= 0x3D5A, 0x6B80
REG= 0x3D5C, 0x5845
REG= 0x3D5E, 0x0600
REG= 0x3D60, 0x439F
REG= 0x3D62, 0x0028
REG= 0x3D64, 0xA206
REG= 0x3D66, 0x0058
REG= 0x3D68, 0x7B6B
REG= 0x3D6A, 0x6852
REG= 0x3D6C, 0x67A8
REG= 0x3D6E, 0x6764
REG= 0x3D70, 0x6465
REG= 0x3D72, 0x65F7
REG= 0x3D74, 0x5283
REG= 0x3D76, 0x5E80
REG= 0x3D78, 0x6964
REG= 0x3D7A, 0x8064
REG= 0x3D7C, 0x826A
REG= 0x3D7E, 0x967A
REG= 0x3D80, 0xA26A
REG= 0x3D82, 0x8058
REG= 0x3D84, 0x806B
REG= 0x3D86, 0x8241
REG= 0x3D88, 0x8140
REG= 0x3D8A, 0x8140
REG= 0x3D8C, 0x8041
REG= 0x3D8E, 0x8042
REG= 0x3D90, 0x827B
REG= 0x3D92, 0x8106
REG= 0x3D94, 0xC817
REG= 0x3D96, 0x0080
REG= 0x3D98, 0x200C
REG= 0x3D9A, 0x8018
REG= 0x3D9C, 0x0C83
REG= 0x3D9E, 0x448E
REG= 0x3DA0, 0x6B20
REG= 0x3DA2, 0x3069
REG= 0x3DA4, 0x803B
REG= 0x3DA6, 0x0480
REG= 0x3DA8, 0x4481
REG= 0x3DAA, 0x06C8
REG= 0x3DAC, 0x8042
REG= 0x3DAE, 0x4182
REG= 0x3DB0, 0x4080
REG= 0x3DB2, 0x4080
REG= 0x3DB4, 0x4180
REG= 0x3DB6, 0x4281
REG= 0x3DB8, 0x5E82
REG= 0x3DBA, 0x06C8
REG= 0x3DBC, 0x8844
REG= 0x3DBE, 0x9444
REG= 0x3DC0, 0x8106
REG= 0x3DC2, 0xC880
REG= 0x3DC4, 0x4241
REG= 0x3DC6, 0x8240
REG= 0x3DC8, 0x7000
REG= 0x3DCA, 0x3804
REG= 0x3DCC, 0x0005
REG= 0x3DCE, 0x170E
REG= 0x3DD0, 0x2380
REG= 0x3DD2, 0x4180
REG= 0x3DD4, 0x5C00
REG= 0x3DD6, 0xC081
REG= 0x3DD8, 0x5D80
REG= 0x3DDA, 0x5A80
REG= 0x3DDC, 0x5780
REG= 0x3DDE, 0x200B
REG= 0x3DE0, 0x00C0
REG= 0x3DE2, 0x8050
REG= 0x3DE4, 0x3301
REG= 0x3DE6, 0x8142
REG= 0x3DE8, 0x8361
REG= 0x3DEA, 0x8160
REG= 0x3DEC, 0x6482
REG= 0x3DEE, 0x658A
REG= 0x3DF0, 0x6580
REG= 0x3DF2, 0x6E82
REG= 0x3DF4, 0x5F81
REG= 0x3DF6, 0x5580
REG= 0x3DF8, 0x6E86
REG= 0x3DFA, 0x5590
REG= 0x3DFC, 0x598B
REG= 0x3DFE, 0x6887
REG= 0x3E00, 0x5B80
REG= 0x3E02, 0x5B8C
REG= 0x3E04, 0x5A85
REG= 0x3E06, 0x5AA2
REG= 0x3E08, 0x5584
REG= 0x3E0A, 0x55B0
REG= 0x3E0C, 0x5581
REG= 0x3E0E, 0x558A
REG= 0x3E10, 0x5580
REG= 0x3E12, 0x55D9
REG= 0x3E14, 0x5081
REG= 0x3E16, 0x6480
REG= 0x3E18, 0x6480
REG= 0x3E1A, 0x6AAE
REG= 0x3E1C, 0x4D93
REG= 0x3E1E, 0x7ACA
REG= 0x3E20, 0x6A82
REG= 0x3E22, 0x6B80
REG= 0x3E24, 0x5845
REG= 0x3E26, 0x0600
REG= 0x3E28, 0x439F
REG= 0x3E2A, 0x4384
REG= 0x3E2C, 0x0600
REG= 0x3E2E, 0x587B
REG= 0x3E30, 0x6B68
REG= 0x3E32, 0x5267
REG= 0x3E34, 0x8345
REG= 0x3E36, 0xA367
REG= 0x3E38, 0x6464
REG= 0x3E3A, 0x6565
REG= 0x3E3C, 0xFF95
REG= 0x3E3E, 0x5285
REG= 0x3E40, 0x6964
REG= 0x3E42, 0x8064
REG= 0x3E44, 0x826A
REG= 0x3E46, 0x967A
REG= 0x3E48, 0xA26A
REG= 0x3E4A, 0x8058
REG= 0x3E4C, 0x806B
REG= 0x3E4E, 0x9641
REG= 0x3E50, 0x8240
REG= 0x3E52, 0x8240
REG= 0x3E54, 0x4C45
REG= 0x3E56, 0x847B
REG= 0x3E58, 0x8217
REG= 0x3E5A, 0x0080
REG= 0x3E5C, 0x200C
REG= 0x3E5E, 0x8018
REG= 0x3E60, 0x0C93
REG= 0x3E62, 0x6B20
REG= 0x3E64, 0x3069
REG= 0x3E66, 0x803B
REG= 0x3E68, 0x0487
REG= 0x3E6A, 0x4580
REG= 0x3E6C, 0x4C40
REG= 0x3E6E, 0x7000
REG= 0x3E70, 0x8040
REG= 0x3E72, 0x4CBD
REG= 0x3E74, 0x000E
REG= 0x3E76, 0xBE44
REG= 0x3E78, 0x8844
REG= 0x3E7A, 0xBC78
REG= 0x3E7C, 0x0900
REG= 0x3E7E, 0x8904
REG= 0x3E80, 0x8080
REG= 0x3E82, 0x0240
REG= 0x3E84, 0x8609
REG= 0x3E86, 0x008E
REG= 0x3E88, 0x0900
REG= 0x3E8A, 0x8002
REG= 0x3E8C, 0x4080
REG= 0x3E8E, 0x0480
REG= 0x3E90, 0x887D
REG= 0x3E92, 0x7E86
REG= 0x3E94, 0x0900
REG= 0x3E96, 0xBA43
REG= 0x3E98, 0xFFFF
REG= 0x3E9A, 0xFFFF
REG= 0x3E9C, 0xFFFF
REG= 0x3E9E, 0xFFBE
REG= 0x3EA0, 0x41A6
REG= 0x3EA2, 0x4291
REG= 0x3EA4, 0x794C
REG= 0x3EA6, 0x40BF
REG= 0x3EA8, 0x7000
REG= 0x3EAA, 0x0000
REG= 0x3EAC, 0x0000
REG= 0x3EAE, 0x0000
REG= 0x3EB0, 0x0000
REG= 0x3EB2, 0x0000
REG= 0x3EB4, 0x0000
REG= 0x3EB6, 0x0000
REG= 0x3EB8, 0x0000
REG= 0x3EBA, 0x0000
REG= 0x3EBC, 0x0000
REG= 0x3EBE, 0x0000
REG= 0x3EC0, 0x0000
REG= 0x3EC2, 0x0000
REG= 0x3EC4, 0x0000
REG= 0x3EC6, 0x0000

REG= 0x3180, 0xBFFF // FINEDIGCORR_CONTROL
REG= 0x3F38, 0x1328 // GTH_THRES_FDOC
REG= 0x3F3F, 0x01
REG= 0x3EE8, 0x1100 // DAC_LD_32_33
REG= 0x3ED6, 0x786B // DAC_LD_14_15
REG= 0x3F3C, 0x0001 // ANALOG_CONTROL9
REG= 0x30D2, 0x000C // CRM_CONTROL
REG= 0x31E0, 0x0741 // PIX_DEF_ID
REG= 0x31E6, 0x1000 // PIX_DEF_ID_2
REG= 0x3F04, 0x0002 // NOISE_GAIN_THRESHOLD0
REG= 0x3F06, 0x0004 // NOISE_GAIN_THRESHOLD1
REG= 0x3F08, 0x0008 // NOISE_GAIN_THRESHOLD2
REG= 0x3F10, 0x0303 // SINGLE_K_FACTOR0
REG= 0x3F12, 0x0303 // SINGLE_K_FACTOR1
REG= 0x3F14, 0x0101 // SINGLE_K_FACTOR2
REG= 0x3F16, 0x0204 // CROSSFACTOR0
REG= 0x3F1C, 0x0080 // SINGLE_MAXFACTOR
REG= 0x301A, 0x0018 // RESET_REGISTER
DELAY=100
REG= 0x31BE, 0x2003 // MIPI_CONFIG
REG= 0x31AE, 0x0202 // SERIAL_FORMAT
REG= 0x0112, 0x0A0A // CCP_DATA_FORMAT
REG= 0x0300, 0x0005 // VT_PIX_CLK_DIV
REG= 0x0306, 0x0050 // PLL_MULTIPLIER
REG= 0x0308, 0x000A // OP_PIX_CLK_DIV
REG= 0x3016, 0x0111 // ROW_SPEED
REG= 0x3064, 0x5840 // SMIA_TEST
REG= 0x3F3A, 0x002D // ANALOG_CONTROL8
REG= 0x3172, 0x0286 // ANALOG_CONTROL2
REG= 0x3EDA, 0x1152 // DAC_LD_18_19
REG= 0x3EF2, 0x6457 // DAC_LD_42_43
REG= 0x3154, 0x0500 // GLOBAL_BOOST
REG= 0x3120, 0x0021 // GAIN_DITHER_CONTROL
REG= 0x0104, 0x01 // GROUPED_PARAMETER_HOLD
REG= 0x3012, 0x0F11 // COARSE_INTEGRATION_TIME_
REG= 0x300A, 0x0F12 // FRAME_LENGTH_LINE_
REG= 0x300C, 0x50DC // LINE_LENGTH_PCK_
REG= 0x3002, 0x0008 // Y_ADDR_START_
REG= 0x3004, 0x0008 // X_ADDR_START_
REG= 0x3006, 0x0E6C // Y_ADDR_END_
REG= 0x3008, 0x1337 // X_ADDR_END_
REG= 0x034C, 0x1330 // X_OUTPUT_SIZE
REG= 0x034E, 0x0E64 // Y_OUTPUT_SIZE
REG= 0x303E, 0x0000 // READ_STYLE
REG= 0x3040, 0x0041 // READ_MODE
REG= 0x0400, 0x0000 // SCALING_MODE
REG= 0x0404, 0x0010 // SCALE_M
REG= 0x0408, 0x1010 // SECOND_RESIDUAL
REG= 0x040A, 0x0210 // SECOND_CROP
REG= 0x0104, 0x00 // GROUPED_PARAMETER_HOLD
REG= 0x3F0A, 0x0505 // NOISE_FLOOR10
REG= 0x3F0C, 0x0D07 // NOISE_FLOOR32
REG= 0x3F1E, 0x000E // NOISE_COEF
REG= 0x3F40, 0x1414 // COUPLE_K_FACTOR0
REG= 0x3F42, 0x0C0C // COUPLE_K_FACTOR1
REG= 0x3F18, 0x0604 // CROSSFACTOR1
REG= 0x305E, 0x2001 // GLOBAL_GAIN
REG= 0x3ED2, 0x449D // DAC_LD_10_11
REG= 0x3EDC, 0x01C9 // DAC_LD_20_21
REG= 0x3EE0, 0x1558 // DAC_LD_24_25
REG= 0x3EC8, 0x0074 // DAC_LD_0_1
REG= 0x3ED8, 0x60A0 // DAC_LD_16_17
REG= 0x3ECC, 0x7386 // DAC_LD_4_5
REG= 0x3F1A, 0x0F04 // CROSSFACTOR2
REG= 0x3F44, 0x0C0C // COUPLE_K_FACTOR2
REG= 0x3ED0, 0x00FF // DAC_LD_8_9
REG= 0x301A, 0x001C // RESET_REGISTER
DELAY=100
REG= 0x301A, 0x001C // RESET_REGISTER
DELAY=100

REG = 0x3040, 0x4041
REG = 0x3056, 0x2001
REG = 0x3058, 0x356d
REG = 0x305A, 0x356d
REG = 0x305C, 0x2001
REG = 0x3012, 0x0211
REG = 0x3028, 0x0038

REG = 0x31BC, 0x8509    //clk cont,  cxx

REG = 0x3040, 0x40C3 

REG = 0x034C, 0x09A0
REG = 0x034E, 0x0438

//frame speed  18fps
REG = 0x300A, 0x2F0 
REG = 0x300C, 0x3000



;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX298
SIZE      = 9312, 3496 
BIT_WIDTH = 8 
FORMAT    = 0, 2
I2C_MODE  = 2					
I2C_ADDR  = 0x34
;TRANS_LVL = 128

;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x12
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x24
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x60
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x0D
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0xAA
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

VRCMD = 0xD7, 0x4800, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4800, 0x0300, 1, 0x80
VRCMD = 0xD7, 0x4800, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4800, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4800, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4800, 0x0D00, 1, 0x12
VRCMD = 0xD7, 0x4800, 0x0E00, 1, 0x30
VRCMD = 0xD7, 0x4800, 0x0F00, 1, 0x0D
VRCMD = 0xD7, 0x4800, 0x1000, 1, 0xAA
VRCMD = 0xD7, 0x4800, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4800, 0x2300, 1, 0x01
VRCMD = 0xD7, 0x4800, 0x2400, 1, 0x03
VRCMD = 0xD7, 0x4800, 0x2500, 1, 0x10

[board parameter][dev2]


[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00

VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00

VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0103 , 0x01
DELAY = 100
REG = 0x0100,0x00		  
// mode setting************/	  
REG = 0x0114,0x01 
REG = 0x0220,0x00 
REG = 0x0221,0x11 
REG = 0x0222,0x10
REG = 0x302b,0x00
REG = 0x0340,0x0E 
REG = 0x0341,0x1C 
REG = 0x0342,0x40 
REG = 0x0343,0xA0 
REG = 0x0344,0x00 
REG = 0x0345,0x00 
REG = 0x0346,0x00 
REG = 0x0347,0x00 
REG = 0x0348,0x12 
REG = 0x0349,0x2F 
REG = 0x034A,0x0D 
REG = 0x034B,0xA7 
REG = 0x0381,0x01 
REG = 0x0383,0x01 
REG = 0x0385,0x01 
REG = 0x0387,0x01 
REG = 0x0900,0x00 
REG = 0x0901,0x11 
REG = 0x0902,0x00 
REG = 0x3010,0x65 
REG = 0x3011,0x01 
REG = 0x30C0,0x11 
REG = 0x300D,0x00 
REG = 0x30FD,0x00 
REG = 0x8493,0x00 
REG = 0x8863,0x00 
REG = 0x90D7,0x19 
// output size setting**********/
REG = 0x0112,0x0A 
REG = 0x0113,0x0A 
REG = 0x034C,0x12 
REG = 0x034D,0x30 
REG = 0x034E,0x0D 
REG = 0x034F,0xA8 
REG = 0x0401,0x00 
REG = 0x0404,0x00 
REG = 0x0405,0x10 
REG = 0x0408,0x00 
REG = 0x0409,0x00 
REG = 0x040A,0x00 
REG = 0x040B,0x00 
REG = 0x040C,0x12 
REG = 0x040D,0x30 
REG = 0x040E,0x0D 
REG = 0x040F,0xA8 
// clock setting************/
REG = 0x0301,0x05 
REG = 0x0303,0x02 
REG = 0x0305,0x04 
REG = 0x0306,0x00 
REG = 0x0307,0x40	//7D
REG = 0x0309,0x0A 
REG = 0x030B,0x01 
REG = 0x030D,0x0F 
REG = 0x030E,0x03 
REG = 0x030F,0x41 
REG = 0x0310,0x00 
// data rateing setting*********/ 								  
REG = 0x0820,0x0B 
REG = 0x0821,0xB8 
REG = 0x0822,0x00 
REG = 0x0823,0x00 
// integration time setting******/									  
REG = 0x0202,0x0E 
REG = 0x0203,0x12 
REG = 0x0224,0x01 
REG = 0x0225,0xF4 
// gain setting****************/									 
REG = 0x0204,0x00 
REG = 0x0205,0x00 
REG = 0x0216,0x00 
REG = 0x0217,0x00 
REG = 0x020E,0x01 
REG = 0x020F,0x00 
REG = 0x0210,0x01 
REG = 0x0211,0x00 
REG = 0x0212,0x01 
REG = 0x0213,0x00 
REG = 0x0214,0x01 
REG = 0x0215,0x00 
// NR Setting*****************/ 		   
REG = 0x3058,0x00 
// PD setting************/						 
REG = 0x3103,0x01//PD_OUT_EN
REG = 0x3165,0x01//0:16*12 window,1:8*6window;2:flexible
REG = 0x3166,0x01//flexible window mode 
// flexible window*************/
//REG = 0x3100,0x01//x_start
//REG = 0x3101,0x01
//REG = 0x3102,0x01//y_start
//REG = 0x3103,0x01
//REG = 0x3104,0x01//x_end
//REG = 0x3105,0x01
//REG = 0x3106,0x01//x_end
//REG = 0x3107,0x01
// PD 8*6 window*************/
REG = 0x3108,0x00//x_start
REG = 0x3109,0x58
REG = 0x310a,0x00//y_start
REG = 0x310b,0x48
REG = 0x310c,0x02//x_end
REG = 0x310d,0x30
REG = 0x310e,0x02//y_end
REG = 0x310f,0x2c
REG = 0x0100,0x01

REG = 0x0210 , 0x02   //Red
REG = 0x0212 , 0x02   //Blue
REG = 0x0205 , 0x50

REG = 0x0101 , 0x01   //image orientation
REG = 0x0202 , 0xf  


REG = 0x0342, 0x28  //HTS[15:8]
;REG = 0x0343, 0xA0  //HTS[7:0]
;REG = 0x0344, 0x00  //VTS[15:8]
;REG = 0x0345, 0x00  //VTS[7:0]
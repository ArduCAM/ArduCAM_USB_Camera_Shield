;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = OV5647						
SIZE      = 1920, 1080
BIT_WIDTH = 8 
FORMAT    = 0, 2
I2C_MODE  = 2					
I2C_ADDR  = 0x6C		

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x23
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x80
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x04
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x38
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x07
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00

VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00

VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;[register parameter]					Register parameter set for USB2.0 & USB3.0 mode	
;[register parameter][dev2]				Register parameter set for USB2.0 mode
;[register parameter][dev3][inf2]		Register parameter set for USB3.0 mode and USB2.0 interface
;[register parameter][dev3][inf3]		Register parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x0103, 0x01
REG = 0x0100, 0x00
REG = 0x0100, 0x00
REG = 0x0103, 0x01
REG = 0x3034, 0x1a
REG = 0x3035, 0x21
REG = 0x3036, 0x62
REG = 0x303c, 0x11
REG = 0x3106, 0xf5
REG = 0x3821, 0x00
REG = 0x3820, 0x00
REG = 0x3827, 0xec
REG = 0x370c, 0x03
REG = 0x3612, 0x5b
REG = 0x3618, 0x04
REG = 0x5000, 0x06
REG = 0x5002, 0x40
REG = 0x5003, 0x08
REG = 0x5a00, 0x08
REG = 0x3000, 0x00
REG = 0x3001, 0x00
REG = 0x3002, 0x00
REG = 0x3016, 0x08
REG = 0x3017, 0xe0
REG = 0x3018, 0x44
REG = 0x301c, 0xf8
REG = 0x301d, 0xf0
REG = 0x3a18, 0x00
REG = 0x3a19, 0xf8
REG = 0x3c01, 0x80
REG = 0x3b07, 0x0c
REG = 0x380c, 0x09
REG = 0x380d, 0x70
REG = 0x380e, 0x04
REG = 0x380f, 0x50
REG = 0x3814, 0x11
REG = 0x3815, 0x11
REG = 0x3708, 0x64
REG = 0x3709, 0x12
REG = 0x3808, 0x07
REG = 0x3809, 0x80
REG = 0x380a, 0x04
REG = 0x380b, 0x38
REG = 0x3800, 0x01
REG = 0x3801, 0x5c
REG = 0x3802, 0x01
REG = 0x3803, 0xb2
REG = 0x3804, 0x08
REG = 0x3805, 0xe3
REG = 0x3806, 0x05
REG = 0x3807, 0xf1
REG = 0x3811, 0x04
REG = 0x3813, 0x02
REG = 0x3630, 0x2e
REG = 0x3632, 0xe2
REG = 0x3633, 0x23
REG = 0x3634, 0x44
REG = 0x3636, 0x06
REG = 0x3620, 0x64
REG = 0x3621, 0xe0
REG = 0x3600, 0x37
REG = 0x3704, 0xa0
REG = 0x3703, 0x5a
REG = 0x3715, 0x78
REG = 0x3717, 0x01
REG = 0x3731, 0x02
REG = 0x370b, 0x60
REG = 0x3705, 0x1a
REG = 0x3f05, 0x02
REG = 0x3f06, 0x10
REG = 0x3f01, 0x0a
REG = 0x3a08, 0x01
REG = 0x3a09, 0x4b
REG = 0x3a0a, 0x01
REG = 0x3a0b, 0x13
REG = 0x3a0d, 0x04
REG = 0x3a0e, 0x03
REG = 0x3a0f, 0x58
REG = 0x3a10, 0x50
REG = 0x3a1b, 0x58
REG = 0x3a1e, 0x50
REG = 0x3a11, 0x60
REG = 0x3a1f, 0x28
REG = 0x4001, 0x02
REG = 0x4004, 0x04
REG = 0x4000, 0x09
REG = 0x4837, 0x19
REG = 0x4800, 0x34
REG = 0x3503, 0x03
REG = 0x3820, 0x00
REG = 0x3821, 0x02
REG = 0x350a, 0x00
REG = 0x350b, 0x10
REG = 0x3212, 0x00
REG = 0x380e, 0x04
REG = 0x380f, 0x66
REG = 0x3500, 0x00
REG = 0x3501, 0x15
REG = 0x3502, 0x20
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x10
REG = 0x350a, 0x00
REG = 0x350b, 0x10
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x15
REG = 0x3502, 0x20
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x0100, 0x01
REG = 0x350a, 0x00
REG = 0x350b, 0x10
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x15
REG = 0x3502, 0x20
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x13
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x45
REG = 0x3502, 0xb0
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x13
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x45
REG = 0x3502, 0xb0
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x16
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x45
REG = 0x3502, 0xb0
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x18
REG = 0x3212, 0x00
REG = 0x3500, 0x00
REG = 0x3501, 0x46
REG = 0x3502, 0x00
REG = 0x3212, 0x10
REG = 0x3212, 0xa0
REG = 0x350a, 0x00
REG = 0x350b, 0x18
REG = 0x3212, 0x00
REG = 0x380e, 0x04
REG = 0x380f, 0x79
REG = 0x3500, 0x00
REG = 0x3501, 0x47
REG = 0x3502, 0x30
REG = 0x3212, 0x10
REG = 0x3212, 0xa0

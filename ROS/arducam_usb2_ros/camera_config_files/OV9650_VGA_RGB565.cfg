;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = OV9650
VID	      = 0x52cb										
SIZE      = 640, 480
BIT_WIDTH = 8 
FORMAT    = 0, 0	
I2C_MODE  = 0					
I2C_ADDR  = 0x60					


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
//OV9650 RGB565 VGA mode
REG = 0x12, 0x80 
DELAY = 100


REG = 0x11, 0x83
REG = 0x6b, 0x4a
REG = 0x6a, 0x3e
REG = 0x3b, 0x09
REG = 0x13, 0xe0
REG = 0x01, 0x80
REG = 0x02, 0x80
REG = 0x00, 0x00
REG = 0x10, 0x00
REG = 0x13, 0xe5
//
REG = 0x39, 0x43 //50 for 30fps
REG = 0x38, 0x12 //92 for 30fps
REG = 0x37, 0x00
REG = 0x35, 0x91 //81 for 30fps
REG = 0x0e, 0xa0
REG = 0x1e, 0x04
//
REG = 0xa8, 0x80
REG = 0x12, 0x44
REG = 0x04, 0x00
REG = 0x0c, 0x04
REG = 0x0d, 0x80
REG = 0x18, 0xc6
REG = 0x17, 0x26
REG = 0x32, 0xad
REG = 0x03, 0x00
REG = 0x1a, 0x3d
REG = 0x19, 0x01
REG = 0x3f, 0xa6
REG = 0x14, 0x2e
REG = 0x15, 0x02
REG = 0x41, 0x00
REG = 0x42, 0x08
//
REG = 0x1b, 0x00
REG = 0x16, 0x06
REG = 0x33, 0xe2 //c0 for internal regulator
REG = 0x34, 0xbf
REG = 0x96, 0x04
REG = 0x3a, 0x00
REG = 0x8e, 0x00
//
REG = 0x3c, 0x77
REG = 0x8b, 0x06
REG = 0x94, 0x88
REG = 0x95, 0x88
REG = 0x40, 0xd1
REG = 0x29, 0x3f //2f for internal regulator
REG = 0x0f, 0x42
//
REG = 0x3d, 0x90
REG = 0x69, 0x40
REG = 0x5c, 0xb9
REG = 0x5d, 0x96
REG = 0x5e, 0x10
REG = 0x59, 0xc0
REG = 0x5a, 0xaf
REG = 0x5b, 0x55
REG = 0x43, 0xf0
REG = 0x44, 0x10
REG = 0x45, 0x68
REG = 0x46, 0x96
REG = 0x47, 0x60
REG = 0x48, 0x80
REG = 0x5f, 0xe0
REG = 0x60, 0x8c //0c for advanced AWB (related to lens)
REG = 0x61, 0x20
REG = 0xa5, 0xd9
REG = 0xa4, 0x74
REG = 0x8d, 0x02
REG = 0x13, 0xe7
//
REG = 0x4f, 0xb7
REG = 0x50, 0x2e
REG = 0x51, 0x09
REG = 0x52, 0x1f
REG = 0x53, 0xb1
REG = 0x54, 0x12
REG = 0x55, 0x06
REG = 0x56, 0x55
REG = 0x57, 0xdb
REG = 0x58, 0x77
//
REG = 0x8c, 0x23
REG = 0x3e, 0x02
REG = 0xa9, 0xb8
REG = 0xaa, 0x92
REG = 0xab, 0x0a
//
REG = 0x8f, 0xdf
REG = 0x90, 0x00
REG = 0x91, 0x00
REG = 0x9f, 0x00
REG = 0xa0, 0x00
REG = 0x3a, 0x01
//
REG = 0x24, 0x70
REG = 0x25, 0x64
REG = 0x26, 0xc3
//
REG = 0x2a, 0x00 //10 for 50Hz
REG = 0x2b, 0x00 //40 for 50Hz
//
//gamma
REG = 0x6c, 0x40
REG = 0x6d, 0x30
REG = 0x6e, 0x4b
REG = 0x6f, 0x60
REG = 0x70, 0x70
REG = 0x71, 0x70
REG = 0x72, 0x70
REG = 0x73, 0x70
REG = 0x74, 0x60
REG = 0x75, 0x60
REG = 0x76, 0x50
REG = 0x77, 0x48
REG = 0x78, 0x3a
REG = 0x79, 0x2e
REG = 0x7a, 0x28
REG = 0x7b, 0x22
REG = 0x7c, 0x04
REG = 0x7d, 0x07
REG = 0x7e, 0x10
REG = 0x7f, 0x28
REG = 0x80, 0x36
REG = 0x81, 0x44
REG = 0x82, 0x52
REG = 0x83, 0x60
REG = 0x84, 0x6c
REG = 0x85, 0x78
REG = 0x86, 0x8c
REG = 0x87, 0x9e
REG = 0x88, 0xbb
REG = 0x89, 0xd2
REG = 0x8a, 0xe6
//
REG = 0x09, 0x11
REG = 0x09, 0x01
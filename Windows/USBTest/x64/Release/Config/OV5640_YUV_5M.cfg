;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = OV5640
VID	      = 0x52cb										
SIZE      = 2592, 1944

BIT_WIDTH = 8 
FORMAT    = 2, 0
I2C_MODE  = 2					
I2C_ADDR  = 0x78					
			


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		;<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
;VRCMD = 0xF0, 0x11, 0x12, 0						
;VRCMD = 0xF1, 0x13, 0x14, 1, 100
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x00
DELAY = 100
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x15
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             ;<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
;DELAY  = 0x100												 
;REG    = 0x10, 0x00FF
;BITSET = 0x10, 0xF000
;BITCLR = 0x10, 0x8000

REG = 0x3103, 0x11 
DELAY = 100
REG = 0x3008, 0x82 
DELAY = 100
REG = 0x3008, 0x42    
DELAY = 100
REG = 0x3103, 0x03 
REG = 0x3017, 0xff 
REG = 0x3018, 0xff 
REG = 0x3034, 0x1a 
REG = 0x3035, 0x21 
REG = 0x3036, 0x46 
REG = 0x3037, 0x13 
REG = 0x3108, 0x01 
REG = 0x3630, 0x36 
REG = 0x3631, 0x0e 
REG = 0x3632, 0xe2 
REG = 0x3633, 0x12 
REG = 0x3621, 0xe0 
REG = 0x3704, 0xa0 
REG = 0x3703, 0x5a 
REG = 0x3715, 0x78 
REG = 0x3717, 0x01 
REG = 0x370b, 0x60 
REG = 0x3705, 0x1a 
REG = 0x3905, 0x02 
REG = 0x3906, 0x10 
REG = 0x3901, 0x0a 
REG = 0x3731, 0x12 
REG = 0x3600, 0x08 
REG = 0x3601, 0x33 
REG = 0x302d, 0x60 
REG = 0x3620, 0x52 
REG = 0x371b, 0x20 
REG = 0x471c, 0x50 
REG = 0x3a13, 0x43 
REG = 0x3a18, 0x00 
REG = 0x3a19, 0xf8 
REG = 0x3635, 0x13 
REG = 0x3636, 0x03 
REG = 0x3634, 0x40 
REG = 0x3622, 0x01 
REG = 0x3c01, 0x34 
REG = 0x3c04, 0x28 
REG = 0x3c05, 0x98 
REG = 0x3c06, 0x00 
REG = 0x3c07, 0x08 
REG = 0x3c08, 0x00 
REG = 0x3c09, 0x1c 
REG = 0x3c0a, 0x9c 
REG = 0x3c0b, 0x40 
REG = 0x3820, 0x41 
REG = 0x3821, 0x07 
REG = 0x3814, 0x31 
REG = 0x3815, 0x31 
REG = 0x3800, 0x00 
REG = 0x3801, 0x00 
REG = 0x3802, 0x00 
REG = 0x3803, 0x04 
REG = 0x3804, 0x0a 
REG = 0x3805, 0x3f 
REG = 0x3806, 0x07 
REG = 0x3807, 0x9b 
REG = 0x3808, 0x03 
REG = 0x3809, 0x20 
REG = 0x380a, 0x02 
REG = 0x380b, 0x58 
REG = 0x380c, 0x07 
REG = 0x380d, 0x68 
REG = 0x380e, 0x03 
REG = 0x380f, 0xd8 
REG = 0x3810, 0x00 
REG = 0x3811, 0x10 
REG = 0x3812, 0x00 
REG = 0x3813, 0x06 
REG = 0x3618, 0x00 
REG = 0x3612, 0x29 
REG = 0x3708, 0x64 
REG = 0x3709, 0x52 
REG = 0x370c, 0x03 
REG = 0x3a02, 0x03 
REG = 0x3a03, 0xd8 
REG = 0x3a08, 0x01 
REG = 0x3a09, 0x27 
REG = 0x3a0a, 0x00 
REG = 0x3a0b, 0xf6 
REG = 0x3a0e, 0x03 
REG = 0x3a0d, 0x04 
REG = 0x3a14, 0x03 
REG = 0x3a15, 0xd8 
REG = 0x4001, 0x02 
REG = 0x4004, 0x02 
REG = 0x3000, 0x00 
REG = 0x3002, 0x1c 
REG = 0x3004, 0xff 
REG = 0x3006, 0xc3 
REG = 0x300e, 0x58 
REG = 0x302e, 0x00 
REG = 0x4740, 0x20 
REG = 0x4300, 0x30 
REG = 0x501f, 0x00 
REG = 0x4713, 0x03 
REG = 0x4407, 0x04 
REG = 0x440e, 0x00 
REG = 0x460b, 0x35 
REG = 0x460c, 0x20 
REG = 0x4837, 0x22 
REG = 0x3824, 0x02 
REG = 0x5000, 0xa7 
REG = 0x5001, 0xa3 
REG = 0x5180, 0xff 
REG = 0x5181, 0xf2 
REG = 0x5182, 0x00 
REG = 0x5183, 0x14 
REG = 0x5184, 0x25 
REG = 0x5185, 0x24 
REG = 0x5186, 0x09 
REG = 0x5187, 0x09 
REG = 0x5188, 0x09 
REG = 0x5189, 0x75 
REG = 0x518a, 0x54 
REG = 0x518b, 0xe0 
REG = 0x518c, 0xb2 
REG = 0x518d, 0x42 
REG = 0x518e, 0x3d 
REG = 0x518f, 0x56 
REG = 0x5190, 0x46 
REG = 0x5191, 0xf8 
REG = 0x5192, 0x04 
REG = 0x5193, 0x70 
REG = 0x5194, 0xf0 
REG = 0x5195, 0xf0 
REG = 0x5196, 0x03 
REG = 0x5197, 0x01 
REG = 0x5198, 0x04 
REG = 0x5199, 0x12 
REG = 0x519a, 0x04 
REG = 0x519b, 0x00 
REG = 0x519c, 0x06 
REG = 0x519d, 0x82 
REG = 0x519e, 0x38 
REG = 0x5381, 0x1e 
REG = 0x5382, 0x5b 
REG = 0x5383, 0x08 
REG = 0x5384, 0x0a 
REG = 0x5385, 0x7e 
REG = 0x5386, 0x88 
REG = 0x5387, 0x7c 
REG = 0x5388, 0x6c 
REG = 0x5389, 0x10 
REG = 0x538a, 0x01 
REG = 0x538b, 0x98 
REG = 0x5300, 0x08 
REG = 0x5301, 0x30 
REG = 0x5302, 0x10 
REG = 0x5303, 0x00 
REG = 0x5304, 0x08 
REG = 0x5305, 0x30 
REG = 0x5306, 0x08 
REG = 0x5307, 0x16 
REG = 0x5309, 0x08 
REG = 0x530a, 0x30 
REG = 0x530b, 0x04 
REG = 0x530c, 0x06 
REG = 0x5480, 0x01 
REG = 0x5481, 0x08 
REG = 0x5482, 0x14 
REG = 0x5483, 0x28 
REG = 0x5484, 0x51 
REG = 0x5485, 0x65 
REG = 0x5486, 0x71 
REG = 0x5487, 0x7d 
REG = 0x5488, 0x87 
REG = 0x5489, 0x91 
REG = 0x548a, 0x9a 
REG = 0x548b, 0xaa 
REG = 0x548c, 0xb8 
REG = 0x548d, 0xcd 
REG = 0x548e, 0xdd 
REG = 0x548f, 0xea 
REG = 0x5490, 0x1d 
REG = 0x5580, 0x02 
REG = 0x5583, 0x40 
REG = 0x5584, 0x10 
REG = 0x5589, 0x10 
REG = 0x558a, 0x00 
REG = 0x558b, 0xf8 
REG = 0x5800, 0x23 
REG = 0x5801, 0x14 
REG = 0x5802, 0x0f 
REG = 0x5803, 0x0f 
REG = 0x5804, 0x12 
REG = 0x5805, 0x26 
REG = 0x5806, 0x0c 
REG = 0x5807, 0x08 
REG = 0x5808, 0x05 
REG = 0x5809, 0x05 
REG = 0x580a, 0x08 
REG = 0x580b, 0x0d 
REG = 0x580c, 0x08 
REG = 0x580d, 0x03 
REG = 0x580e, 0x00 
REG = 0x580f, 0x00 
REG = 0x5810, 0x03 
REG = 0x5811, 0x09 
REG = 0x5812, 0x07 
REG = 0x5813, 0x03 
REG = 0x5814, 0x00 
REG = 0x5815, 0x01 
REG = 0x5816, 0x03 
REG = 0x5817, 0x08 
REG = 0x5818, 0x0d 
REG = 0x5819, 0x08 
REG = 0x581a, 0x05 
REG = 0x581b, 0x06 
REG = 0x581c, 0x08 
REG = 0x581d, 0x0e 
REG = 0x581e, 0x29 
REG = 0x581f, 0x17 
REG = 0x5820, 0x11 
REG = 0x5821, 0x11 
REG = 0x5822, 0x15 
REG = 0x5823, 0x28 
REG = 0x5824, 0x46 
REG = 0x5825, 0x26 
REG = 0x5826, 0x08 
REG = 0x5827, 0x26 
REG = 0x5828, 0x64 
REG = 0x5829, 0x26 
REG = 0x582a, 0x24 
REG = 0x582b, 0x22 
REG = 0x582c, 0x24 
REG = 0x582d, 0x24 
REG = 0x582e, 0x06 
REG = 0x582f, 0x22 
REG = 0x5830, 0x40 
REG = 0x5831, 0x42 
REG = 0x5832, 0x24 
REG = 0x5833, 0x26 
REG = 0x5834, 0x24 
REG = 0x5835, 0x22 
REG = 0x5836, 0x22 
REG = 0x5837, 0x26 
REG = 0x5838, 0x44 
REG = 0x5839, 0x24 
REG = 0x583a, 0x26 
REG = 0x583b, 0x28 
REG = 0x583c, 0x42 
REG = 0x583d, 0xce 
REG = 0x5025, 0x00 
REG = 0x3a0f, 0x30 
REG = 0x3a10, 0x28 
REG = 0x3a1b, 0x30 
REG = 0x3a1e, 0x26 
REG = 0x3a11, 0x60 
REG = 0x3a1f, 0x14 
REG = 0x3008, 0x02 


// YUV 2592x1944, 3.75fps
// input clock 24Mhz, PCLK 42Mhz
REG = 0x3035, 0x41  // PLL
REG = 0x3036, 0x69  // PLL
REG = 0x3c07, 0x07  // lightm eter 1 threshold[7:0]
REG = 0x3820, 0x40  // flip
REG = 0x3821, 0x06  // mirror
REG = 0x3814, 0x11  // timing X inc
REG = 0x3815, 0x11  // timing Y inc
REG = 0x3800, 0x00  // HS
REG = 0x3801, 0x00  // HS
REG = 0x3802, 0x00  // VS
REG = 0x3803, 0x00  // VS
REG = 0x3804, 0x0a  // HW (HE)
REG = 0x3805, 0x3f  // HW (HE)
REG = 0x3806, 0x07  // VH (VE)
REG = 0x3807, 0x9f  // VH (VE)
REG = 0x3808, 0x0a  // DVPHO
REG = 0x3809, 0x20  // DVPHO
REG = 0x380a, 0x07  // DVPVO
REG = 0x380b, 0x98  // DVPVO
REG = 0x380c, 0x0b  // HTS
REG = 0x380d, 0x1c  // HTS

REG = 0x380e, 0x07  // VTS
REG = 0x380f, 0xb0  // VTS
REG = 0x3813, 0x04  // timing V offset
REG = 0x3618, 0x04 
REG = 0x3612, 0x2b 
REG = 0x3709, 0x12 
REG = 0x370c, 0x00 
// banding filters are calculated automatically in camera driver
//REG = 0x3a02, 0x07  // 60Hz max exposure
//REG = 0x3a03, 0xae  // 60Hz max exposure
//REG = 0x3a08, 0x01  // B50 step
//REG = 0x3a09, 0x27  // B50 step
//REG = 0x3a0a, 0x00  // B60 step
//REG = 0x3a0b, 0xf6  // B60 step
//REG = 0x3a0e, 0x06  // 50Hz max band
//REG = 0x3a0d, 0x08  // 60Hz max band
//REG = 0x3a14, 0x07  // 50Hz max exposure
//REG = 0x3a15, 0xae  // 50Hz max exposure
REG = 0x4004, 0x06  // BLC line number
REG = 0x3002, 0x1c  // reset JFIFO, SFIFO, JPG
REG = 0x3006, 0xc3  // disable clock of JPEG2x, JPEG
REG = 0x4713, 0x02  // JPEG mode 3
REG = 0x4407, 0x0c  // Quantization sacle
REG = 0x460b, 0x37 
REG = 0x460c, 0x20 
REG = 0x4837, 0x2c  // MIPI global timing
REG = 0x3824, 0x01  // PCLK manual divider
REG = 0x5001, 0x83  // SDE on, CMX on, AWB on
REG = 0x3503, 0x03 

// YUV 2592x1944 5fps
// Input Clock = 24Mhz, PCLK = 56MHz
//same settings as 2592x1944 3.75fps, except the following settings
//REG = 0x3035, 0x21  // PLL
//REG = 0x3036, 0x46  // PLL

// YUV 2592x1944 7.5fps
// Input Clock = 24Mhz, PCLK = 84MHz
//same settings as 2592x1944 3.75fps, except the following settings
//REG = 0x3035, 0x21  // PLL
//REG = 0x3036, 0x69  // PLL

REG = 0x3035, 0x61 //for Arducam USB2
REG = 0x4740, 0x21
REG = 0x3503, 0x00
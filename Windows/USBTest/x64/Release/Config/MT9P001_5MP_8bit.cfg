;MT9P001 Config
;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = MT9P001
VID	      = 0x52cb										
SIZE      = 2592,1944
BIT_WIDTH = 8 
FORMAT    = 0, 3	
I2C_MODE  = 1					
I2C_ADDR  = 0x90					


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
;VRCMD = 0xF0, 0x11, 0x12, 0						
;VRCMD = 0xF1, 0x13, 0x14, 1, 100
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x00
DELAY = 100
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x0d
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

REG = 0x0010, 0x0051		//PLL Control1 = 81
REG = 0x0011, 0x1401		//PLL Config1 = 5121
REG = 0x0012, 0x0007		//PLL Config2 = 4
DELAY=1
REG = 0x0010, 0x0053		//PLL Control2 = 83
REG = 0x0007, 0x1F82		//Control Mode = 8066
DELAY=200


REG = 0x002B, 0x0018		//(3) GREEN1_GAIN_REG = 8
REG = 0x002C, 0x001a		//(3) BLUE_GAIN_REG = 18
REG = 0x002D, 0x001A		//(3) RED_GAIN_REG = 10
REG = 0x002E, 0x0018		//(3) GREEN2_GAIN_REG = 8


REG = 0x001E, 0x0006		//Read Mode 1 = 6
REG = 0x0020, 0x0040		//Read Mode 2 = 64
REG = 0x0022, 0x0000		//Row Mode = 0
REG = 0x0023, 0x0000		//Column Mode = 0
REG = 0x0008, 0x0000		//Shut. Wid. Upper = 0
REG = 0x0009, 0x079F		//Integration Time = 1951
REG = 0x000C, 0x0000		//Shutter Delay = 0

;[Full Resolution Optimization - 15FPS @ 96MHz]
REG =  0x70,0x79		//Reserved
REG =  0x71,0x7800		//Reserved
REG =  0x72,0x7800		//Reserved
REG =  0x73,0x300		//Reserved
REG =  0x74,0x300		//Reserved
REG =  0x75,0x3c00		//Reserved
REG =  0x76,0x4e3d		//Reserved
REG =  0x77,0x4e3d		//Reserved
REG =  0x78,0x774f		//Reserved
REG =  0x79,0x7900		//Reserved
REG =  0x7a,0x7900		//Reserved
REG =  0x7b,0x7800		//Reserved
REG =  0x7c,0x7800		//Reserved
REG =  0x7e,0x7800		//Reserved
REG =  0x7f,0x7800		//Reserved
REG =  0x6,0x0		//Reserved
REG =  0x29,0x481		//Reserved
REG =  0x3e,0x87		//Reserved
REG =  0x3f,0x7		//Reserved
REG =  0x41,0x3		//Reserved
REG =  0x48,0x18		//Reserved
REG =  0x5f,0x1c16		//Reserved
REG =  0x57,0x7		//Reserved
REG =  0x2A,0xff74		//Reserved
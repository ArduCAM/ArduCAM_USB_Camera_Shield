;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; I2C_ADDR  	= <i2cAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = OV7675
VID	      = 0x52cb										
SIZE      = 640, 480
BIT_WIDTH = 8 
FORMAT    = 2, 3	
I2C_MODE  = 0					
I2C_ADDR  = 0x42					


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x00
DELAY = 100
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
          
REG = 0x11,0x80 //PLL
DELAY = 100
REG = 0x3a,0x0C 
REG = 0x3D,0xC0 
REG = 0x12,0x00 //YUV format
REG = 0x15,0x00 
	  
REG = 0xc1,0x7f //BLC
	   
REG = 0x17,0x13 //window
REG = 0x18,0x01 
REG = 0x32,0xbF 
REG = 0x19,0x03 
REG = 0x1a,0x7b 
REG = 0x03,0x0a 
	   
REG = 0x0c,0x00 
REG = 0x3e,0x00 //scale 
REG = 0x70,0x3a 
REG = 0x71,0x35 
REG = 0x72,0x11 
REG = 0x73,0xf0 
REG = 0xa2,0x02 //Pclk delay

REG = 0x7a,0x24 
REG = 0x7b,0x04 
REG = 0x7c,0x07 
REG = 0x7d,0x10 
REG = 0x7e,0x28 
REG = 0x7f,0x36 
REG = 0x80,0x44 
REG = 0x81,0x52 
REG = 0x82,0x60 
REG = 0x83,0x6c 
REG = 0x84,0x78 
REG = 0x85,0x8c 
REG = 0x86,0x9e 
REG = 0x87,0xbb 
REG = 0x88,0xd2 
REG = 0x89,0xe5 
	  
REG = 0x13,0xe0 //3a enable
REG = 0x00,0x00 //gain
REG = 0x10,0x00 //exposue  value
REG = 0x0d,0x40  //full window
REG = 0x42,0x00 //AEC window
REG = 0xb7,0x56  //reserved
REG = 0x14,0x38  // auto gain ceiling
REG = 0xa5,0x02   // 50 banding step
REG = 0xab,0x03   // 60HZ banding step 
REG = 0x24,0x54  //AEC and AGC operation region
REG = 0x25,0x4c  
REG = 0x26,0x82    
REG = 0x9f,0x78 
REG = 0xa0,0x68 
REG = 0xa1,0x03 
REG = 0xa6,0xD8 
REG = 0xa7,0xD8 
REG = 0xa8,0xf0 
REG = 0xa9,0x90 
REG = 0xaa,0x14 
REG = 0x13,0xe5 //
	   
REG = 0x0e,0x61 //reserved
REG = 0x0f,0x4b 
REG = 0x16,0x02 //reserved
REG = 0x1e,0x07 //mirror and flip
REG = 0x21,0x02 //reserved
REG = 0x22,0x91 //reserved
REG = 0x29,0x07 //reserved
REG = 0x33,0x0b 
REG = 0x35,0x0b 
REG = 0x37,0x1d //ADC control
REG = 0x38,0x71 
REG = 0x39,0x2a 
REG = 0x3c,0x78 //HREF option
REG = 0x4e,0x20 
REG = 0x69,0x00 //pre gain control
	
REG = 0x6b,0x0a //PLL control
REG = 0x74,0x10 //Digital gain control
REG = 0x8d,0x4f //reserved
REG = 0x8e,0x00 
REG = 0x8f,0x00 
REG = 0x90,0x00 
REG = 0x91,0x00 
REG = 0x96,0x00 
REG = 0x9a,0x80 
REG = 0xb0,0x84 //reserved
REG = 0xb1,0x0c //ABLC
REG = 0xb2,0x0e 
REG = 0xb3,0x82 
REG = 0xb8,0x0a 

REG = 0x43,0x0a //reserved
REG = 0x44,0xf2 
REG = 0x45,0x40 
REG = 0x46,0x5a 
REG = 0x47,0x33 
REG = 0x48,0x42 
REG = 0x59,0xab //AWB
REG = 0x5a,0xad 
REG = 0x5b,0xba 
REG = 0x5c,0x6d 
REG = 0x5d,0x54 
REG = 0x5e,0x0e 
REG = 0x6c,0x0a 
REG = 0x6d,0x65 
REG = 0x6e,0x11 
REG = 0x6f,0x94 

REG = 0x6a,0x40 //AWB G gain
REG = 0x01,0x56 //AWB B gain
REG = 0x02,0x44 //AWB R Gain
REG = 0x13,0xe7 	
	 
REG = 0x4f,0x73 //CCM
REG = 0x50,0x73 
REG = 0x51,0x00 
REG = 0x52,0x1F 
REG = 0x53,0x55    
REG = 0x54,0x73    
REG = 0x55,0x00 
REG = 0x56,0x40 
REG = 0x57,0x80 
REG = 0x58,0x9e 
	   
REG = 0x3f,0x02 //Eege
REG = 0x75,0x23 
REG = 0x76,0xe1 
REG = 0x4c,0x00 //De noie strength
REG = 0x77,0x01 //De noise offet
REG = 0x3D,0xC2 //Satuation
REG = 0x4b,0x09 
REG = 0xc9,0x60 
REG = 0x41,0x38 	
REG = 0x56,0x40 //contrast control
	
REG = 0x34,0x11 
REG = 0x3b,0xaa    
REG = 0xa4,0x89 //insert dummy from 4x
REG = 0x96,0x00 
REG = 0x97,0x30 
REG = 0x98,0x20 
REG = 0x99,0x30 
REG = 0x9a,0x84 
REG = 0x9b,0x29 
REG = 0x9c,0x03 
REG = 0x9d,0x99 
REG = 0x9e,0x7f 
REG = 0x78,0x04 

REG = 0x79,0x01 
REG = 0xc8,0xf0 
REG = 0x79,0x0f 
REG = 0xc8,0x00 
REG = 0x79,0x10 
REG = 0xc8,0x7e 
REG = 0x79,0x0a 
REG = 0xc8,0x80 
REG = 0x79,0x0b 
REG = 0xc8,0x01 
REG = 0x79,0x0c 
REG = 0xc8,0x0f 
REG = 0x79,0x0d 
REG = 0xc8,0x20 
REG = 0x79,0x09 
REG = 0xc8,0x80 
REG = 0x79,0x02 
REG = 0xc8,0xc0 
REG = 0x79,0x03 
REG = 0xc8,0x40 
REG = 0x79,0x05 
REG = 0xc8,0x30 
REG = 0x79,0x26 	
	   
REG = 0x62,0x00 
REG = 0x63,0x00 
REG = 0x64,0x10 
REG = 0x65,0x00 
REG = 0x66,0x05 
REG = 0x94,0x10    
REG = 0x95,0x13   
REG = 0xbb, 0xa1  //blc target	
	   
	   //gamma
REG = 0x7a, 0x28  
REG = 0x7b, 0x04  
REG = 0x7c, 0x09  
REG = 0x7d, 0x16  
REG = 0x7e, 0x30  
REG = 0x7f, 0x3E  
REG = 0x80, 0x4B  
REG = 0x81, 0x59  
REG = 0x82, 0x67  
REG = 0x83, 0x72  
REG = 0x84, 0x7c  
REG = 0x85, 0x8e  
REG = 0x86, 0x9e  
REG = 0x87, 0xB6  
REG = 0x88, 0xcc  
REG = 0x89, 0xE2  
	
	   //CCM
REG = 0x4f, 0x7d 
REG = 0x50, 0x81 
REG = 0x51, 0x04 
REG = 0x52, 0x23 
REG = 0x53, 0x5a 
REG = 0x54, 0x7d 
REG = 0x58, 0x1a 
	   //awb 
REG = 0x43, 0x0a 
REG = 0x44, 0xf2 
REG = 0x45, 0x31 
REG = 0x46, 0x57 
REG = 0x47, 0x37 
REG = 0x48, 0x4c 
REG = 0x59, 0x80 
REG = 0x5a, 0xbb 
REG = 0x5b, 0xbb 
REG = 0x5c, 0x60 
REG = 0x5d, 0x75 
REG = 0x5e, 0x16 
REG = 0x6a, 0x40 
REG = 0x6c, 0x0a 
REG = 0x6d, 0x65 
REG = 0x6e, 0x11 
REG = 0x6f, 0x96 
	   //lenc 
REG = 0x62,0x18 
REG = 0x63,0x10 
REG = 0x64,0x0f 
REG = 0x65,0x00 
REG = 0x66,0x05 
REG = 0x94,0x0d 
REG = 0x95,0x11  //0x10   
	   //aec
REG = 0x24, 0x5e //0x68,0x5e(0x62)
REG = 0x25, 0x54  //0x54(0x58)
REG = 0x26, 0x93  //0x84	   
	   //Edge + Denoise
REG = 0x41, 0x38 
REG = 0x75, 0x63   //0x64
REG = 0x76, 0xe0  
REG = 0x77, 0x07  
	   
	   //UVAdjust
REG = 0xc9, 0x30   // to make more saturation 0x60
REG = 0x61, 0x43 	

REG = 0x4d,0xc0  // this will make add dummy line after active line, it is a little difference with OV7670_AE_LUTs
REG = 0x13, 0xF7  // for mt6268 and mt6253, capture no need to change clock,so preview no need to enable ae
   
REG = 0x09 ,0x03 //output drive capability 
;MT9F002 Config
;**************************************************************************************/
; ----- camera parameter -----
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; VID		= set the Vendor ID of camera
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;							 | 0 -> RAW	   | 1 -> RGB565  |	2 -> YUV422   | 3 -> JPG  |
;							 | -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           |
;							 | -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           |
;							 | -- 2 -> GB  |              | -- 2 -> UYVY  |           |
;							 | -- 3 -> BG  |              | -- 3 -> VYUY  |           |
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;																							0 ->  8 bit address &  8 bit value				
;																						  	1 ->  8 bit address & 16 bit value
;																							2 -> 16 bit address &  8 bit value
;																							3 -> 16 bit address & 16 bit value		
; SHIPADDR  = set the ship address for register config of camera 
; 
; -- Keyname format:
; CFG_MODE  	= <value1>							;<comment>
; TYPE      	= <value1>
; VID			= <vid>
; SIZE			= <width>, <height>
; BIT_WIDTH 	= <bitWidth>
; FORMAT    	= <value1>[, <value2>]
; I2C_MODE  	= <value1>
; SHIPADDR  	= <shipAddress> 
;
; <valueN>		Index value representing certain meanings 
; <vid>			Vendor ID of the camera
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <shipAddress>	Ship address for register config of camera
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = MT9F002
VID	      = 0x52cb										
SIZE      = 2228,1254
BIT_WIDTH = 8 
FORMAT    = 0, 3	
I2C_MODE  = 3					
I2C_ADDR  = 0x20					


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		;<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4000, 0x0100, 1, 0x05
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             ;<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

; -- MT9F002 Config --
;Turn sensor streaming OFF 
REG = 0x301A, 0x0018 
REG = 0x0103, 0x1	   //Software Reset = 0x1
DELAY = 300   

REG = 0x31AE, 0x301	//Serial Format = 0x301
REG = 0x0112, 0x0C0C	//CCP Data Format = 0xC0C
REG = 0x301A, 0x0010	//Reset Register = 0x10
REG = 0x3064, 0x0805	//SMIA Test = 0x805
REG = 0x301E, 0x00A8	//Data Pedestal = 0xA8
REG = 0x301A, 0x10DC	//Reset Register = 0x10DC
REG = 0x0104, 0x1	//Grouped Parameter Hold = 0x1
REG = 0x0100, 0x0	//Mode Select = 0x0

REG = 0x0300, 0x4	   //vt_pix_clk_div = 0x4
REG = 0x0302, 0x01	   //vt_sys_clk_div = 0x1
REG = 0x0304, 0x08	   //pre_pll_clk_div = 0x3
REG = 0x0306, 0x6E	   //pll_multiplier = 0x6E
REG = 0x0308, 0x0C	   //op_pix_clk_div = 0xC
REG = 0x030A, 0x01	   //op_sys_clk_div = 0x1


REG = 0x3016, 0x111	//Row Speed = 0x111
REG = 0x0344, 0x06C	//Column Start = 0x6C
REG = 0x0348, 0x11D1	//Column End = 0x11D1
REG = 0x0346, 0x1A6	//Row Start = 0x1A6
REG = 0x034A, 0xB6F	//Row End = 0xB6F
REG = 0x3040, 0x04C3	//Read Mode = 0x4C3
REG = 0x0400, 0x0	//Scaling Mode = 0x0
REG = 0x0404, 0x10	//Scale_M = 0x10
REG = 0x034C, 0x8B4	//Output Width = 0x8B4
REG = 0x034E, 0x4E6	//Output Height = 0x4E6
REG = 0x0342, 0x2350	//Line Length = 0x2350
REG = 0x0340, 0x0604	//Frame Lines = 0x604
REG = 0x3010, 0x0203	//Fine Correction = 0x203
REG = 0x3012, 0x0018	//Coarse Integration Time = 0x18
REG = 0x3014, 0x0BE0	//Fine Integration Time = 0xBE0
REG = 0x3018, 0x0000	//Extra Delay = 0x0
BITFIELD = 0x30D4, 0x6000, 0x0001   //Column Correction, bits 0x6000 = 1
BITFIELD = 0x3176, 0x4000, 0x0000   //Fast Timing, bits 0x4000 = 0
BITFIELD = 0x3178, 0x4000, 0x0000   //ANALOG_CONTROL5, bits 0x4000 = 0
BITFIELD = 0x317C, 0x4000, 0x0001   //Overlap Sampling, bits 0x4000 = 1
BITFIELD = 0x3EE8, 0x1, 0x1   //DAC_LD_28_29, bits 0x1 = 1
BITFIELD = 0x3EEA, 0x70, 0x07   //DAC_LD_30_31, bits 0x70 = 7
BITFIELD = 0x301A, 0x2, 0x1   //Restart Frame, bits 0x2 = 1
REG = 0x0104, 0x0	//Grouped Parameter Hold = 0x0
REG = 0x0100, 0x1	//Mode Select = 0x1


	
REG = 0x301a, 0x5ccc    //reset_register       
REG = 0x3012, 500 
REG = 0x0206, 33 
REG = 0x0208, 50 
REG = 0x020a, 50 
REG = 0x020c, 33 

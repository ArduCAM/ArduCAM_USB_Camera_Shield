;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = AR0134
SIZE      = 1280, 964
BIT_WIDTH = 12 
FORMAT    = 4, 0	
I2C_MODE  = 3					
I2C_ADDR  = 0x20		
;TRANS_LVL = 64	

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]


[board parameter][dev2]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x85
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x09

[board parameter][dev3][inf2]
VRCMD = 0xF3, 0x0000, 0x0000, 0
;VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

[board parameter][dev3][inf3]
VRCMD = 0xF3, 0x0000, 0x0000, 0           
;VRCMD = 0xF9, 0x0000, 0x0000, 0   //8 bit
VRCMD = 0xF9, 0x0001, 0x0000, 0    //12 bit

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
; [PLL_settings]	
REG = 0x3028, 0x0010 		// ROW_SPEED = 16

REG = 0x302E, 0x0001 		// PRE_PLL_CLK_DIV = 2 (N)
REG = 0x3030, 0x0012 		// PLL_MULTIPLIER = 44 (M)
REG = 0x302C, 0x0001 		// VT_SYS_CLK_DIV = 1  (P1)
REG = 0x302A, 0x0010 		// VT_PIX_CLK_DIV = 16 (P2)

REG = 0x3032, 0x0000 		// DIGITAL_BINNING = 0
REG = 0x30B0, 0x0080 		// DIGITAL_TEST = 128

; [Timing_settings]
REG = 0x301A, 0x10DC  		// RESET_REGISTER = 4312
;REG = 0x301A, 0x1980  		// R0x301A[12] = 1, R0x301A[11] = 1, R0x301A[8] = 1, R0x301A[7] = 1, R0x301A[2] = 0
REG = 0x300C, 0x0672  		// LINE_LENGTH_PCK = 1650

REG = 0x3002, 0x0000  		// Y_ADDR_START = 0
REG = 0x3004, 0x0000  		// X_ADDR_START = 0
REG = 0x3006, 0x03BF  		// Y_ADDR_END = 959
REG = 0x3008, 0x04FF  		// X_ADDR_END = 1279
REG = 0x300A, 0x03DE  		// FRAME_LENGTH_LINES = 990
REG = 0x3012, 0x0100  		// COARSE_INTEGRATION_TIME
REG = 0x3014, 0x00C0  		// FINE_INTEGRATION_TIME = 192
REG = 0x30A6, 0x0001  		// Y_ODD_INC = 1

REG = 0x308C, 0x0000  		// Y_ADDR_START_CB = 0
REG = 0x308A, 0x0000  		// X_ADDR_START_CB = 0
REG = 0x3090, 0x03BF  		// Y_ADDR_END_CB = 959
REG = 0x308E, 0x04FF  		// X_ADDR_END_CB = 1279
REG = 0x30AA, 0x03DE  		// FRAME_LENGTH_LINES_CB = 990
REG = 0x3016, 0x0064  		// COARSE_INTEGRATION_TIME_CB = 100
REG = 0x3018, 0x00C0  		// FINE_INTEGRATION_TIME_CB = 192
REG = 0x30A8, 0x0001  		// Y_ODD_INC_CB = 1

REG = 0x3040, 0x4000  		// READ_MODE = 0
REG = 0x3064, 0x1982  		// EMBEDDED_DATA_CTRL = 6530
REG = 0x31C6, 0x8000  		// HISPI_CONTROL_STATUS = 32768 (DEFAULT)

REG = 0x3056, 48 
REG = 0x3058, 66
REG = 0x305a, 66
REG = 0x305c, 48 

[register parameter][dev3][inf2]

[register parameter][dev3][inf3]
